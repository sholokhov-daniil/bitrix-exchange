{"version":3,"file":"js/369.1231aeda.js","mappings":"uMAAO,MAAMA,EAAY,wZAgBZC,EAAkB,wVAclBC,EAAW,gPAaXC,EAAe,8bAiBfC,EAAqB,2VAcrBC,EAAc,oR,g+JCvE3B,MAAMC,EAAc,EAEpB,O,uWCFA,MAAMA,EAAc,EAEpB,O","sources":["webpack://documentation/./src/data/codes/php/events/iblock/properties/enumiration/index.js","webpack://documentation/./src/pages/events/iblock/property/ListEnumiration.vue","webpack://documentation/./src/components/block-code/CodeBlock.vue"],"sourcesContent":["export const BeforeAdd = `\nuse Bitrix\\\\Main\\\\Event;\nuse Bitrix\\\\Main\\\\EventManager;\n\nEventManager::getInstance()->addEventHandler(\n    'sholokhov.exchange',\n    'onBeforeIBlockPropertyEnumerationAdd',\n    function(Event $event) {\n        $parameters = &$event->getParameters();\n        $parameters['FIELDS']['XML_ID'] = 'my_value';\n        \n        return new EventResult(EventResult::SUCCESS, $parameters);\n    }\n);\n`;\n\nexport const CancelBeforeAdd = `\nuse Bitrix\\\\Main\\\\Event;\nuse Bitrix\\\\Main\\\\EventResult;\nuse Bitrix\\\\Main\\\\EventManager;\n\nEventManager::getInstance()->addEventHandler(\n    'sholokhov.exchange',\n    'onBeforeIBlockPropertyEnumerationAdd',\n    function(Event $event) {        \n        return new EventResult(EventResult::ERROR, $event->getParameters());\n    }\n);\n`;\n\nexport const AfterAdd = `\nuse Bitrix\\\\Main\\\\Event;\nuse Bitrix\\\\Main\\\\EventManager;\n\nEventManager::getInstance()->addEventHandler(\n    'sholokhov.exchange',\n    'onAfterIBlockPropertyEnumerationAdd',\n    function(Event $event) {\n        //...\n    }\n);\n`;\n\nexport const BeforeUpdate = `\nuse Bitrix\\\\Main\\\\Event;\nuse Bitrix\\\\Main\\\\EventResult;\nuse Bitrix\\\\Main\\\\EventManager;\n\nEventManager::getInstance()->addEventHandler(\n    'sholokhov.exchange',\n    'onBeforeIBlockPropertyEnumerationUpdate',\n    function(Event $event) {\n        $parameters = &$event->getParameters();\n        $parameters['FIELDS']['XML_ID'] = \"new_value\";\n        \n        return new EventResult(EventResult::SUCCESS, $parameters);\n    }\n);\n`;\n\nexport const CancelBeforeUpdate = `\nuse Bitrix\\\\Main\\\\Event;\nuse Bitrix\\\\Main\\\\EventResult;\nuse Bitrix\\\\Main\\\\EventManager;\n\nEventManager::getInstance()->addEventHandler(\n    'sholokhov.exchange',\n    'onBeforeIBlockPropertyEnumerationUpdate',\n    function(Event $event) {        \n        return new EventResult(EventResult::ERROR, $event->getParameters());\n    }\n);\n`;\n\nexport const AfterUpdate = `\nuse Bitrix\\\\Main\\\\Event;\nuse Bitrix\\\\Main\\\\EventResult;\nuse Bitrix\\\\Main\\\\EventManager;\n\nEventManager::getInstance()->addEventHandler(\n    'sholokhov.exchange',\n    'onAfterIBlockPropertyEnumerationUpdate',\n    function(Event $event) {\n        // ...\n    }\n);\n`;","import script from \"./ListEnumiration.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ListEnumiration.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./CodeBlock.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CodeBlock.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["BeforeAdd","CancelBeforeAdd","AfterAdd","BeforeUpdate","CancelBeforeUpdate","AfterUpdate","__exports__"],"sourceRoot":""}