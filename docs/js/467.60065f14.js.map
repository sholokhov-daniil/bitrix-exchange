{"version":3,"file":"js/467.60065f14.js","mappings":"sMAAO,MAAMA,EAAY,6YAgBZC,EAAkB,mVAclBC,EAAW,2OAaXC,EAAe,4bAiBfC,EAAqB,sVAcrBC,EAAc,+Q,ytJCvE3B,MAAMC,EAAc,EAEpB,O,uWCFA,MAAMA,EAAc,EAEpB,O","sources":["webpack://documentation/./src/data/codes/php/events/highload/element/import/index.js","webpack://documentation/./src/pages/events/highload/ElementPage.vue","webpack://documentation/./src/components/block-code/CodeBlock.vue"],"sourcesContent":["export const BeforeAdd = `\nuse Bitrix\\\\Main\\\\Event;\nuse Bitrix\\\\Main\\\\EventManager;\n\nEventManager::getInstance()->addEventHandler(\n    'sholokhov.exchange',\n    'onBeforeHighloadblockElementAdd',\n    function(Event $event) {\n        $parameters = &$event->getParameters();\n        $parameters['FIELDS']['MY_FIELD'] = 15;\n        \n        return new EventResult(EventResult::SUCCESS, $parameters);\n    }\n);\n`;\n\nexport const CancelBeforeAdd = `\nuse Bitrix\\\\Main\\\\Event;\nuse Bitrix\\\\Main\\\\EventResult;\nuse Bitrix\\\\Main\\\\EventManager;\n\nEventManager::getInstance()->addEventHandler(\n    'sholokhov.exchange',\n    'onBeforeHighloadblockElementAdd',\n    function(Event $event) {        \n        return new EventResult(EventResult::ERROR, $event->getParameters());\n    }\n);\n`;\n\nexport const AfterAdd = `\nuse Bitrix\\\\Main\\\\Event;\nuse Bitrix\\\\Main\\\\EventManager;\n\nEventManager::getInstance()->addEventHandler(\n    'sholokhov.exchange',\n    'onAfterHighloadblockElementAdd',\n    function(Event $event) {\n        //...\n    }\n);\n`;\n\nexport const BeforeUpdate = `\nuse Bitrix\\\\Main\\\\Event;\nuse Bitrix\\\\Main\\\\EventResult;\nuse Bitrix\\\\Main\\\\EventManager;\n\nEventManager::getInstance()->addEventHandler(\n    'sholokhov.exchange',\n    'onBeforeHighloadblockElementUpdate',\n    function(Event $event) {\n        $parameters = &$event->getParameters();\n        $parameters['FIELDS']['you_field'] = \"new_value\";\n        \n        return new EventResult(EventResult::SUCCESS, $parameters);\n    }\n);\n`;\n\nexport const CancelBeforeUpdate = `\nuse Bitrix\\\\Main\\\\Event;\nuse Bitrix\\\\Main\\\\EventResult;\nuse Bitrix\\\\Main\\\\EventManager;\n\nEventManager::getInstance()->addEventHandler(\n    'sholokhov.exchange',\n    'onBeforeHighloadblockElementUpdate',\n    function(Event $event) {        \n        return new EventResult(EventResult::ERROR, $event->getParameters());\n    }\n);\n`;\n\nexport const AfterUpdate = `\nuse Bitrix\\\\Main\\\\Event;\nuse Bitrix\\\\Main\\\\EventResult;\nuse Bitrix\\\\Main\\\\EventManager;\n\nEventManager::getInstance()->addEventHandler(\n    'sholokhov.exchange',\n    'onAfterHighloadblockElementUpdate',\n    function(Event $event) {\n        // ...\n    }\n);\n`;","import script from \"./ElementPage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ElementPage.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./CodeBlock.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CodeBlock.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["BeforeAdd","CancelBeforeAdd","AfterAdd","BeforeUpdate","CancelBeforeUpdate","AfterUpdate","__exports__"],"sourceRoot":""}