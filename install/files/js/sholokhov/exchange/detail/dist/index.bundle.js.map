{"version":3,"file":"index.bundle.js","sources":["../src/config/target.js","../src/components/TargetSettings.ts"],"sourcesContent":["import {RenderType} from 'sholokhov.exchange.ui'\nexport default {\n    fields: [\n        {\n            view: RenderType.Input,\n            options: {\n                title: 'SHOLOKHOV_EXCHANGE_SETTINGS_ENTITY_UI_TITLE_FIELD_HASH',\n                attributes: {\n                    name: 'target[hash]'\n                },\n            }\n        },\n        {\n            view: RenderType.Input,\n            options: {\n                title: 'SHOLOKHOV_EXCHANGE_SETTINGS_ENTITY_UI_TITLE_FIELD_ACTIVE',\n                attributes: {\n                    type: 'checkbox',\n                    name: 'target[active]'\n                },\n            }\n        },\n    ]\n};","import Config from '../config/target.js';\nimport {Factory, RenderType} from 'sholokhov.exchange.ui';\n\n/**\n * @since 1.2.0\n * @version 1.2.0\n */\nexport class TargetSettings {\n    /**\n     * Контейнер UI\n     *\n     * @private\n     *\n     * @since 1.2.0\n     * @version 1.2.0\n     */\n    _node: Element|null = null;\n\n    /**\n     * Контейнер хранения пользовательских полей\n     *\n     * @private\n     *\n     * @since 1.2.0\n     * @version 1.2.0\n     */\n    _customFieldNode: Element|null = null;\n\n    /**\n     * Конфигурация отрисовки\n     *\n     * @private\n     *\n     * @since 1.2.0\n     * @version 1.2.0\n     */\n    _options: object;\n\n    /**\n     * @param {Element|string} node Контейнер в который будет производиться отрисовка\n     * @param {object} options Конфигурация отрисовки\n     */\n    constructor(node: string|Element, options: object = {}) {\n        if (typeof node === 'string') {\n            this._node = document.querySelector(node);\n        } else if (node){\n            this._node = node;\n        }\n\n        if (!this._node) {\n            throw 'Invalid target settings node';\n        }\n\n        this._options = options;\n    }\n\n    /**\n     * Отрисовка контейнера UI настроек\n     *\n     * @return void\n     *\n     * @since 1.2.0\n     * @version 1.2.0\n     */\n    view(): void {\n        this._node.innerHTML = '';\n        this._appendType();\n        this._appendFields(this._node, Config.fields);\n        this._appendCustomFields();\n    }\n\n    /**\n     * Загрузка пользовательских полей\n     *\n     * @param target\n     * @private\n     *\n     * @since 1.2.0\n     * @version 1.2.0\n     */\n    _loadFields(target) {\n        BX.ajax.runAction(\n            'sholokhov:exchange.EntityController.getFields',\n            {\n                data: {\n                    code: target\n                }\n            }\n        )\n            .then(response => {\n                this._customFieldNode.innerHTML = '';\n                if (Array.isArray(response.data)) {\n                    this._appendFields(this._customFieldNode, response.data);\n                }\n            })\n            .catch(response => console.error(response))\n    }\n\n    /**\n     * Добавление списка доступных обменов\n     *\n     * @private\n     * @return void\n     *\n     * @since 1.2.0\n     * @version 1.2.0\n     */\n    _appendType(): void {\n        let view;\n        let options = {\n            title: 'SHOLOKHOV_EXCHANGE_SETTINGS_ENTITY_UI_TITLE_FIELD_TYPE',\n            attributes: {\n                name: 'target[type]',\n            },\n            events: {\n                onchange: (event) => this._loadFields(event.target.value),\n            }\n        };\n\n        if (this._options.id) {\n            view = RenderType.Input;\n            options.attributes.type = 'hidden';\n\n        } else {\n            view = RenderType.Select;\n            options.api = {\n                action: 'sholokhov:exchange.EntityController.getByType',\n                data: {\n                    code: 'target'\n                },\n                callback: function(response) {\n                    if (!Array.isArray(response.data)) {\n                        return [];\n                    }\n\n                    response.data = response.data.map(field => ({\n                        value: field.CODE,\n                        name: field.NAME,\n                    }));\n\n                    return response;\n                }\n            };\n        }\n\n        this._node.append(Factory.create(view, options).getContainer());\n    }\n\n    /**\n     * Добавление контейнера с пользовательскими полями\n     *\n     * @private\n     *\n     * @since 1.2.0\n     * @version 1.2.0\n     */\n    _appendCustomFields(): void {\n        this._customFieldNode = document.createElement('div');\n        this._node.append(this._customFieldNode);\n    }\n\n    /**\n     * Отрисовка полей в контейнер\n     *\n     * @param node\n     * @param iterator\n     * @private\n     *\n     * @since 1.2.0\n     * @version 1.2.0\n     */\n    _appendFields(node: Element, iterator: Array<object>): void {\n        iterator.forEach(field => {\n            const element = Factory.create(field.view, field.options);\n            if (element) {\n                node.append(element.getContainer());\n            }\n        })\n    }\n}"],"names":["fields","view","RenderType","Input","options","title","attributes","name","type","TargetSettings","node","_node","document","querySelector","_options","innerHTML","_appendType","_appendFields","Config","_appendCustomFields","target","BX","ajax","runAction","data","code","then","response","_customFieldNode","Array","isArray","console","error","events","onchange","event","_loadFields","value","id","Select","api","action","callback","map","field","CODE","NAME","append","Factory","create","getContainer","createElement","iterator","forEach","element"],"mappings":"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"}