{"version":3,"file":"js/681.js","mappings":"iNAMO,SAASA,EAAOC,EAAQC,GACvBA,GAAUC,MAAMC,MAChBC,GAAGD,KAAKH,EAAQC,EAASC,KAAKC,MAG9BF,GAAUI,QAAQC,KAAOC,MAAMC,QAAQP,EAASI,OAAOC,MACvDL,EAASI,OAAOC,IAAIG,QAAQC,GAG5BT,GAAUI,QAAQM,IAAMJ,MAAMC,QAAQP,EAASI,OAAOM,KACtDV,EAASI,OAAOM,GAAGF,QAAQG,GAG3BX,GAAUC,MAAMG,QAAQQ,QAAUN,MAAMC,QAAQP,EAASC,KAAKG,OAAOQ,UACrEb,EAAOc,WAAab,EAASC,KAAKG,OAAOQ,OAAOE,KAAK,IAE7D,CAOO,SAASL,EAAQM,GACpBZ,GAAGa,QAAQD,EACf,CAOO,SAASJ,EAAWM,GACvBd,GAAGe,WAAWD,EAClB,C,+FCpCA,MAAME,EAAQC,EAIRnB,GAAOoB,EAAAA,EAAAA,IAAS,CACpBC,OAAQ,KAGJC,GAAYC,EAAAA,EAAAA,IAAI,OAEtBC,EAAAA,EAAAA,KAAU,IAAMC,MAEhB,MAAMA,EAAOA,KACPP,EAAMQ,YAAYC,IACpBC,IACKC,MAAK9B,GAAYF,EAAOyB,EAAUQ,MAAO/B,KACzCgC,OAAMhC,GAAYC,EAAKqB,OAAStB,EAASsB,OAAOW,KAAIC,GAASA,EAAMC,YAC/DZ,EAAUQ,QACnBR,EAAUQ,MAAQ,OAIhBF,EAAQA,IAAM1B,GAAGiC,KAAKC,UAAUlB,EAAMQ,YAAYC,IAAK,CAACU,OAAQ,S,8CAIpEC,EAAAA,EAAAA,IAA2B,O,QAAlB,YAAJf,IAAID,G,UACEtB,EAAKqB,OAAOkB,SAAM,WAA7BC,EAAAA,EAAAA,IAEM,MAAAC,EAAA,gBADJD,EAAAA,EAAAA,IAAkEE,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAA7C3C,EAAKqB,QAAhBa,K,WAAVM,EAAAA,EAAAA,IAAkE,KAA/BI,IAAKV,IAAOW,EAAAA,EAAAA,IAAKX,GAAO,M,iCC7B/D,MAAMY,EAAc,EAEpB,O","sources":["webpack://detail/./src/utils/content/index.js","webpack://detail/./src/components/fields/ApiField.vue","webpack://detail/./src/components/fields/ApiField.vue?57f8"],"sourcesContent":["/**\n * Ставка контента в DOM дерево на основе ответа контроллера\n *\n * @param {HTMLElement} target DOM элемент в который будет происходить встраивание\n * @param {Object} response Ответ от API битрикса\n */\nexport function BXHtml(target, response) {\n    if (response?.data?.html) {\n        BX.html(target, response.data.html);\n    }\n\n    if (response?.assets?.css && Array.isArray(response.assets.css)) {\n        response.assets.css.forEach(LoadCss);\n    }\n\n    if (response?.assets?.js && Array.isArray(response.assets.js)) {\n        response.assets.js.forEach(LoadScript);\n    }\n\n    if (response?.data?.assets?.string && Array.isArray(response.data.assets.string)) {\n        target.innerHTML += response.data.assets.string.join('');\n    }\n}\n\n/**\n * Подключение сторонних стилей по ссылке\n *\n * @param {String} style\n */\nexport function LoadCss(style) {\n    BX.loadCSS(style);\n}\n\n/**\n * Подключение сторонних скриптов по ссылке\n *\n * @param {String} script\n */\nexport function LoadScript(script) {\n    BX.loadScript(script);\n}","<script setup>\nimport {defineProps, onMounted, ref, reactive} from \"vue\";\nimport {BXHtml} from \"@/utils/content\";\n\nconst props = defineProps({\n  modelValue: {type: Object, required: true},\n});\n\nconst data = reactive({\n  errors: []\n})\n\nconst container = ref(null);\n\nonMounted(() => load());\n\nconst load = () => {\n  if (props.modelValue?.api) {\n    query()\n        .then(response => BXHtml(container.value, response))\n        .catch(response => data.errors = response.errors.map(error => error.message))\n  } else if (container.value) {\n    container.value = null;\n  }\n}\n\nconst query = () => BX.ajax.runAction(props.modelValue?.api, {method: 'POST'});\n</script>\n\n<template>\n  <div ref=\"container\"></div>\n  <div v-if=\"data.errors.length\">\n    <p v-for=\"message in data.errors\" :key=\"message\">{{ message }}</p>\n  </div>\n</template>","import script from \"./ApiField.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ApiField.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["BXHtml","target","response","data","html","BX","assets","css","Array","isArray","forEach","LoadCss","js","LoadScript","string","innerHTML","join","style","loadCSS","script","loadScript","props","__props","reactive","errors","container","ref","onMounted","load","modelValue","api","query","then","value","catch","map","error","message","ajax","runAction","method","_createElementVNode","length","_createElementBlock","_hoisted_1","_Fragment","_renderList","key","_toDisplayString","__exports__"],"sourceRoot":""}