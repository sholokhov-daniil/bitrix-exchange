{"version":3,"file":"js/268.c5d2225d.js","mappings":"+KACOA,MAAM,wBAAwBC,KAAK,S,kCAAxCC,EAAAA,EAAAA,IAGM,MAHNC,EAGM,EAFJC,EAAAA,EAAAA,IAAkC,WAA/BC,EAAAA,EAAAA,IAA2BC,EAAAC,OAAA,aAC9BF,EAAAA,EAAAA,IAAaC,EAAAC,OAAA,Y,eCFjB,MAAMC,EAAS,CAAC,EAGVC,GAA2B,OAAgBD,EAAQ,CAAC,CAAC,SAASE,KAEpE,O,sNCDA,MAAMC,GAAQC,EAAAA,EAAAA,MACRC,EAAOC,EAMPC,EAAMC,IACH,CACLC,KAAMN,EAAMM,KACZC,OAAQ,CACNC,KAAMH,EAAKG,QAKXC,EAASD,IACTR,EAAMO,OAAOC,OAASA,GACxBN,EAAK,QAASM,EAChB,E,qfCrBF,MAAMV,EAAc,EAEpB,Q,kHCAA,MAAME,GAAQC,EAAAA,EAAAA,OAMdS,EAAAA,EAAAA,KAAU,KACJV,EAAMO,QAAQC,MAChBG,EAAOX,EAAMO,OAAOC,KACtB,KAGFI,EAAAA,EAAAA,KACI,IAAMZ,EAAMa,OACZ,IAAMF,EAAOX,EAAMO,OAAOC,QAE9B,MAAMG,EAAUH,IACdM,YACI,IAAMC,SAASC,eAAeR,IAAOS,eAAe,CAACC,SAAU,YAC/D,IACH,E,+LCnBH,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O,uWCLA,MAAMpB,EAAc,EAEpB,O,qGCLO,MAAMqB,EAAY,sYAgBZC,EAAkB,4UAclBC,EAAW,oOAaXC,EAAe,qbAiBfC,EAAqB,+UAcrBC,EAAc,wQ,8VCnE3B,MAAMC,GAAOC,EAAAA,EAAAA,IAAS,CACpBC,cAAe,CACb,CACEC,MAAO,2BACPpB,KAAM,cAER,CACEoB,MAAO,0BACPpB,KAAM,aAER,CACEoB,MAAO,8BACPpB,KAAM,iBAER,CACEoB,MAAO,6BACPpB,KAAM,mB,6xICpBZ,MAAMV,EAAc,EAEpB,O","sources":["webpack://documentation/./src/components/messages/AlertMessage.vue","webpack://documentation/./src/components/messages/AlertMessage.vue?6b34","webpack://documentation/./src/components/table-contents/NodeTree.vue","webpack://documentation/./src/components/table-contents/NodeTree.vue?2300","webpack://documentation/./src/components/table-contents/TableContents.vue","webpack://documentation/./src/components/table-contents/TableContents.vue?aea1","webpack://documentation/./src/components/block-code/CodeBlock.vue","webpack://documentation/./src/data/codes/php/events/iblock/element/import/index.js","webpack://documentation/./src/pages/events/iblock/ElementPage.vue","webpack://documentation/./src/pages/events/iblock/ElementPage.vue?d568"],"sourcesContent":["<template>\n  <div class=\"alert alert-info mt-2\" role=\"alert\">\n    <b><slot name=\"header\"></slot></b>\n    <slot></slot>\n  </div>\n</template>","import { render } from \"./AlertMessage.vue?vue&type=template&id=0e5728f1\"\nconst script = {}\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<script setup>\nimport {defineProps, defineEmits} from 'vue';\nimport {useRoute} from \"vue-router\";\nimport {RouterLink} from \"vue-router\";\n\nconst route = useRoute();\nconst emit = defineEmits(['click']);\n\ndefineProps({\n  item: {type: Array, default: () => []}\n})\n\nconst to = (item) => {\n  return {\n    name: route.name,\n    params: {\n      hash: item.hash\n    }\n  };\n}\n\nconst click = (hash) => {\n  if (route.params.hash === hash) {\n    emit('click', hash);\n  }\n}\n</script>\n\n<template>\n  <li>\n    <router-link :to=\"to(item)\" @click=\"click(item.hash)\">{{item.title}}</router-link>\n\n    <ul v-if=\"item.children && item.children.length\">\n      <node-tree v-for=\"children in item.children\" :key=\"children.title\" :item=\"children\" @click=\"emit('click', $event)\"/>\n    </ul>\n  </li>\n</template>","import script from \"./NodeTree.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./NodeTree.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport {defineProps, watch, onMounted} from 'vue';\nimport {useRoute} from \"vue-router\";\nimport NodeTree from \"@/components/table-contents/NodeTree.vue\";\n\nconst route = useRoute();\n\ndefineProps({\n  items: {type: Array, default: () => []},\n});\n\nonMounted(() => {\n  if (route.params?.hash) {\n    scroll(route.params.hash);\n  }\n})\n\nwatch(\n    () => route.path,\n    () => scroll(route.params.hash)\n)\nconst scroll = (hash) => {\n  setTimeout(\n      () => document.getElementById(hash)?.scrollIntoView({behavior: 'smooth'}),\n      400\n  )\n}\n</script>\n\n<template>\n  <ul class=\"table-contents\">\n    <node-tree v-for=\"row in items\" :key=\"row.title\" :item=\"row\" @click=\"scroll\"/>\n  </ul>\n</template>\n\n<style scoped>\n.table-contents li {\n  color: blue;\n  cursor: pointer;\n}\n\n.table-contents li:hover {\n  text-decoration: underline;\n  color: #0056b3;\n}\n</style>","import script from \"./TableContents.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TableContents.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./TableContents.vue?vue&type=style&index=0&id=3bed10b0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3bed10b0\"]])\n\nexport default __exports__","import script from \"./CodeBlock.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CodeBlock.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","export const BeforeAdd = `\nuse Bitrix\\\\Main\\\\Event;\nuse Bitrix\\\\Main\\\\EventManager;\n\nEventManager::getInstance()->addEventHandler(\n    'sholokhov.exchange',\n    'onBeforeIBlockElementAdd',\n    function(Event $event) {\n        $parameters = &$event->getParameters();\n        $parameters['FIELDS']['MY_FIELD'] = 15;\n        \n        return new EventResult(EventResult::SUCCESS, $parameters);\n    }\n);\n`;\n\nexport const CancelBeforeAdd = `\nuse Bitrix\\\\Main\\\\Event;\nuse Bitrix\\\\Main\\\\EventResult;\nuse Bitrix\\\\Main\\\\EventManager;\n\nEventManager::getInstance()->addEventHandler(\n    'sholokhov.exchange',\n    'onBeforeIBlockElementAdd',\n    function(Event $event) {        \n        return new EventResult(EventResult::ERROR, $event->getParameters());\n    }\n);\n`;\n\nexport const AfterAdd = `\nuse Bitrix\\\\Main\\\\Event;\nuse Bitrix\\\\Main\\\\EventManager;\n\nEventManager::getInstance()->addEventHandler(\n    'sholokhov.exchange',\n    'onAfterIBlockElementAdd',\n    function(Event $event) {\n        //...\n    }\n);\n`;\n\nexport const BeforeUpdate = `\nuse Bitrix\\\\Main\\\\Event;\nuse Bitrix\\\\Main\\\\EventResult;\nuse Bitrix\\\\Main\\\\EventManager;\n\nEventManager::getInstance()->addEventHandler(\n    'sholokhov.exchange',\n    'onBeforeIBlockElementUpdate',\n    function(Event $event) {\n        $parameters = &$event->getParameters();\n        $parameters['FIELDS']['you_field'] = \"new_value\";\n        \n        return new EventResult(EventResult::SUCCESS, $parameters);\n    }\n);\n`;\n\nexport const CancelBeforeUpdate = `\nuse Bitrix\\\\Main\\\\Event;\nuse Bitrix\\\\Main\\\\EventResult;\nuse Bitrix\\\\Main\\\\EventManager;\n\nEventManager::getInstance()->addEventHandler(\n    'sholokhov.exchange',\n    'onBeforeIBlockElementUpdate',\n    function(Event $event) {        \n        return new EventResult(EventResult::ERROR, $event->getParameters());\n    }\n);\n`;\n\nexport const AfterUpdate = `\nuse Bitrix\\\\Main\\\\Event;\nuse Bitrix\\\\Main\\\\EventResult;\nuse Bitrix\\\\Main\\\\EventManager;\n\nEventManager::getInstance()->addEventHandler(\n    'sholokhov.exchange',\n    'onAfterIBlockElementUpdate',\n    function(Event $event) {\n        // ...\n    }\n);\n`;","<script setup>\nimport {reactive} from 'vue';\nimport CodeBlock from \"@/components/block-code/CodeBlock.vue\";\nimport {BeforeAdd, CancelBeforeAdd, AfterAdd, BeforeUpdate, CancelBeforeUpdate, AfterUpdate} from \"@/data/codes/php/events/iblock/element/import\";\nimport TableContents from \"@/components/table-contents/TableContents.vue\";\nimport AlertMessage from \"@/components/messages/AlertMessage.vue\";\n\nconst data = reactive({\n  tableContents: [\n    {\n      title: 'onBeforeIBlockElementAdd',\n      hash: 'before-add',\n    },\n    {\n      title: 'onAfterIBlockElementAdd',\n      hash: 'after-add',\n    },\n    {\n      title: 'onBeforeIBlockElementUpdate',\n      hash: 'before-update',\n    },\n    {\n      title: 'onAfterIBlockElementUpdate',\n      hash: 'after-update',\n    },\n  ]\n});\n</script>\n\n<template>\n  <section>\n    <h1>События импорта элементов информационного блока</h1>\n    <p>Класс <a href=\"/api/classes/Sholokhov-BitrixExchange-Target-IBlock-Element.html\" target=\"_blank\">Element</a></p>\n\n    <h2 class=\"pt-2\">События</h2>\n    <table-contents :items=\"data.tableContents\" />\n  </section>\n\n    <section class=\"card mt-5 mb-5\">\n      <div class=\"card-body\">\n        <h2 class=\"card-title\" id=\"before-add\">onBeforeIBlockElementAdd</h2>\n        <div class=\"card-text\">\n          <p>Событие вызывается перед созданием элемента</p>\n\n          <h3 class=\"pt-2\">Параметры события</h3>\n          <table class=\"table table-dark table-striped\">\n            <thead>\n            <tr>\n              <td>Название</td>\n              <td>Тип данных</td>\n              <td>Обязательность</td>\n              <td>Примечание</td>\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n              <td>FIELDS</td>\n              <td>array</td>\n              <td>Да</td>\n              <td>Значение передается по ссылке</td>\n            </tr>\n            </tbody>\n          </table>\n\n          <h3 class=\"pt-2\">Пример подписки на событие</h3>\n          <code-block :code=\"BeforeAdd\" />\n\n          <alert-message>\n            <template #header>\n              Присутствует возможность отмены добавления значения.\n            </template>\n            <p>Если отменить добавление, то в лог файле появится соответствующее сообщение, но в результате работы импорта это не отобразится.</p>\n          </alert-message>\n\n          <h3 class=\"pt-2\">Пример отмены добавления</h3>\n          <code-block :code=\"CancelBeforeAdd\" />\n        </div>\n      </div>\n    </section>\n\n    <section class=\"card mt-5 mb-5\">\n      <div class=\"card-body\">\n        <h2 class=\"card-title\" id=\"after-add\">onAfterIBlockElementAdd</h2>\n        <div class=\"card-text\">\n          <p>Событие вызывается после добавления элемента</p>\n\n          <h3 class=\"pt-2\">Параметры события</h3>\n          <table class=\"table table-dark table-striped\">\n            <thead>\n            <tr>\n              <td>Название</td>\n              <td>Тип данных</td>\n              <td>Обязательность</td>\n              <td>Примечание</td>\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n              <td>ID</td>\n              <td>int</td>\n              <td>Да</td>\n              <td>ID созданного элемента</td>\n            </tr>\n            <tr>\n              <td>FIELDS</td>\n              <td>array</td>\n              <td>Да</td>\n              <td>Массив с добавляемыми значениями</td>\n            </tr>\n            <tr>\n              <td>RESULT</td>\n              <td>Sholokhov\\Exchange\\Messages\\Type\\DataResult</td>\n              <td>Да</td>\n              <td>Результат создания</td>\n            </tr>\n            </tbody>\n          </table>\n\n          <h3 class=\"pt-2\">Пример подписки на событие</h3>\n\n          <code-block :code=\"AfterAdd\" />\n        </div>\n      </div>\n    </section>\n\n    <section class=\"card mt-5 mb-5\">\n      <div class=\"card-body\">\n        <h2 class=\"card-title\" id=\"before-update\">onBeforeIBlockElementUpdate</h2>\n        <div class=\"card-text\">\n          <p>Событие перед изменением элемента</p>\n\n          <h3 class=\"pt-2\">Параметры события</h3>\n          <table class=\"table table-dark table-striped\">\n            <thead>\n            <tr>\n              <td>Название</td>\n              <td>Тип данных</td>\n              <td>Обязательность</td>\n              <td>Примечание</td>\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n              <td>ID</td>\n              <td>int</td>\n              <td>Да</td>\n              <td>ID обновляемого элемента</td>\n            </tr>\n            <tr>\n              <td>FIELDS</td>\n              <td>array</td>\n              <td>Да</td>\n              <td>Значение передаются по ссылке</td>\n            </tr>\n            </tbody>\n          </table>\n\n          <h3 class=\"pt-2\">Пример подписки на событие</h3>\n\n          <code-block :code=\"BeforeUpdate\" />\n\n          <alert-message>\n            <template #header>\n              Присутствует возможность отмены изменения элемента.\n            </template>\n\n            <p>Если отменить изменение, то в лог файле появится соответствующее сообщение, но в результате работы импорта это не отобразится.</p>\n          </alert-message>\n\n          <h3 class=\"pt-2\">Пример отмены добавления</h3>\n          <code-block :code=\"CancelBeforeUpdate\" />\n        </div>\n      </div>\n    </section>\n\n    <section class=\"card mt-5 mb-5\">\n      <div class=\"card-body\">\n        <h2 class=\"card-title\" id=\"after-update\">onAfterIBlockElementUpdate</h2>\n        <div class=\"card-text\">\n          <p>Событие вызывается после обновления элемента сущности и передаются следующие параметры</p>\n\n          <h3 class=\"pt-2\">Параметры события</h3>\n          <table class=\"table table-dark table-striped\">\n            <thead>\n            <tr>\n              <td>Название</td>\n              <td>Тип данных</td>\n              <td>Обязательность</td>\n              <td>Примечание</td>\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n              <td>ID</td>\n              <td>int</td>\n              <td>Да</td>\n              <td>ID обновляемого элемента</td>\n            </tr>\n            <tr>\n              <td>FIELDS</td>\n              <td>array</td>\n              <td>Да</td>\n              <td>Массив с обновленными значениями</td>\n            </tr>\n            <tr>\n              <td>RESULT</td>\n              <td>Sholokhov\\Exchange\\Messages\\Type\\DataResult</td>\n              <td>Да</td>\n              <td>Результат обновления</td>\n            </tr>\n            </tbody>\n          </table>\n\n          <h3 class=\"pt-2\">Пример подписки на событие</h3>\n\n          <code-block :code=\"AfterUpdate\" />\n        </div>\n      </div>\n    </section>\n</template>","import script from \"./ElementPage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ElementPage.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["class","role","_createElementBlock","_hoisted_1","_createElementVNode","_renderSlot","_ctx","$slots","script","__exports__","render","route","useRoute","emit","__emit","to","item","name","params","hash","click","onMounted","scroll","watch","path","setTimeout","document","getElementById","scrollIntoView","behavior","BeforeAdd","CancelBeforeAdd","AfterAdd","BeforeUpdate","CancelBeforeUpdate","AfterUpdate","data","reactive","tableContents","title"],"sourceRoot":""}