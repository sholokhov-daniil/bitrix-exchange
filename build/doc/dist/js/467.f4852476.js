"use strict";(self["webpackChunkdocumentation"]=self["webpackChunkdocumentation"]||[]).push([[467],{467:function(t,e,n){n.r(e),n.d(e,{default:function(){return y}});var a=n(6768),d=n(144),l=n(2462);const r="\nuse Bitrix\\Main\\Event;\nuse Bitrix\\Main\\EventManager;\n\nEventManager::getInstance()->addEventHandler(\n    'sholokhov.exchange',\n    'onBeforeHighloadblockElementAdd',\n    function(Event $event) {\n        $parameters = &$event->getParameters();\n        $parameters['FIELDS']['MY_FIELD'] = 15;\n        \n        return new EventResult(EventResult::SUCCESS, $parameters);\n    }\n);\n",s="\nuse Bitrix\\Main\\Event;\nuse Bitrix\\Main\\EventResult;\nuse Bitrix\\Main\\EventManager;\n\nEventManager::getInstance()->addEventHandler(\n    'sholokhov.exchange',\n    'onBeforeHighloadblockElementAdd',\n    function(Event $event) {        \n        return new EventResult(EventResult::ERROR, $event->getParameters());\n    }\n);\n",o="\nuse Bitrix\\Main\\Event;\nuse Bitrix\\Main\\EventManager;\n\nEventManager::getInstance()->addEventHandler(\n    'sholokhov.exchange',\n    'onAfterHighloadblockElementAdd',\n    function(Event $event) {\n        //...\n    }\n);\n",c="\nuse Bitrix\\Main\\Event;\nuse Bitrix\\Main\\EventResult;\nuse Bitrix\\Main\\EventManager;\n\nEventManager::getInstance()->addEventHandler(\n    'sholokhov.exchange',\n    'onBeforeHighloadblockElementUpdate',\n    function(Event $event) {\n        $parameters = &$event->getParameters();\n        $parameters['FIELDS']['you_field'] = \"new_value\";\n        \n        return new EventResult(EventResult::SUCCESS, $parameters);\n    }\n);\n",i="\nuse Bitrix\\Main\\Event;\nuse Bitrix\\Main\\EventResult;\nuse Bitrix\\Main\\EventManager;\n\nEventManager::getInstance()->addEventHandler(\n    'sholokhov.exchange',\n    'onBeforeHighloadblockElementUpdate',\n    function(Event $event) {        \n        return new EventResult(EventResult::ERROR, $event->getParameters());\n    }\n);\n",h="\nuse Bitrix\\Main\\Event;\nuse Bitrix\\Main\\EventResult;\nuse Bitrix\\Main\\EventManager;\n\nEventManager::getInstance()->addEventHandler(\n    'sholokhov.exchange',\n    'onAfterHighloadblockElementUpdate',\n    function(Event $event) {\n        // ...\n    }\n);\n";var u=n(737);const v={class:"card mt-5 mb-5"},E={class:"card-body"},b={class:"card-text"},k={class:"card mt-5 mb-5"},g={class:"card-body"},p={class:"card-text"},f={class:"card mt-5 mb-5"},m={class:"card-body"},M={class:"card-text"},R={class:"card mt-5 mb-5"},x={class:"card-body"},L={class:"card-text"};var B={__name:"ElementPage",setup(t){return(t,e)=>((0,a.uX)(),(0,a.CE)(a.FK,null,[e[14]||(e[14]=(0,a.Fv)('<article><h1>События импорта элементов информационного блока</h1><p>Класс <a href="/api/classes/Sholokhov-BitrixExchange-Target-Highloadblock-Element.html" target="_blank">Element</a></p><h2 class="pt-2">События</h2><ul><li><a href="#before-add">onBeforeHighloadblockElementAdd</a></li><li><a href="#after-add">onAfterHighloadblockElementAdd</a></li><li><a href="#before-update">onBeforeHighloadblockElementUpdate</a></li><li><a href="#after-update">onAfterHighloadblockElementUpdate</a></li></ul></article>',1)),(0,a.Lk)("article",v,[(0,a.Lk)("div",E,[e[4]||(e[4]=(0,a.Lk)("h2",{class:"card-title",id:"before-add"},"onBeforeHighloadblockElementAdd",-1)),(0,a.Lk)("div",b,[e[2]||(e[2]=(0,a.Fv)('<p>Событие вызывается перед созданием элемента</p><h3 class="pt-2">Параметры события</h3><table class="table table-dark table-striped"><thead><tr><td>Название</td><td>Тип данных</td><td>Обязательность</td><td>Примечание</td></tr></thead><tbody><tr><td>FIELDS</td><td>array</td><td>Да</td><td>Значение передается по ссылке</td></tr></tbody></table><h3 class="pt-2">Пример подписки на событие</h3>',4)),(0,a.bF)(l.A,{code:(0,d.R1)(r)},null,8,["code"]),(0,a.bF)(u.A,null,{header:(0,a.k6)((()=>e[0]||(e[0]=[(0,a.eW)(" Присутствует возможность отмены добавления значения. ")]))),default:(0,a.k6)((()=>[e[1]||(e[1]=(0,a.Lk)("p",null,"Если отменить добавление, то в лог файле появится соответствующее сообщение, но в результате работы импорта это не отобразится.",-1))])),_:1}),e[3]||(e[3]=(0,a.Lk)("h3",{class:"pt-2"},"Пример отмены добавления",-1)),(0,a.bF)(l.A,{code:(0,d.R1)(s)},null,8,["code"])])])]),(0,a.Lk)("article",k,[(0,a.Lk)("div",g,[e[6]||(e[6]=(0,a.Lk)("h2",{class:"card-title",id:"after-add"},"onAfterHighloadblockElementAdd",-1)),(0,a.Lk)("div",p,[e[5]||(e[5]=(0,a.Fv)('<p>Событие вызывается после добавления элемента</p><h3 class="pt-2">Параметры события</h3><table class="table table-dark table-striped"><thead><tr><td>Название</td><td>Тип данных</td><td>Обязательность</td><td>Примечание</td></tr></thead><tbody><tr><td>ID</td><td>int</td><td>Да</td><td>ID созданного элемента</td></tr><tr><td>FIELDS</td><td>array</td><td>Да</td><td>Массив с добавляемыми значениями</td></tr><tr><td>RESULT</td><td>Sholokhov\\Exchange\\Messages\\Type\\DataResult</td><td>Да</td><td>Результат создания</td></tr></tbody></table><h3 class="pt-2">Пример подписки на событие</h3>',4)),(0,a.bF)(l.A,{code:(0,d.R1)(o)},null,8,["code"])])])]),(0,a.Lk)("article",f,[(0,a.Lk)("div",m,[e[11]||(e[11]=(0,a.Lk)("h2",{class:"card-title",id:"before-update"},"onBeforeHighloadblockElementUpdate",-1)),(0,a.Lk)("div",M,[e[9]||(e[9]=(0,a.Fv)('<p>Событие перед изменением элемента</p><h3 class="pt-2">Параметры события</h3><table class="table table-dark table-striped"><thead><tr><td>Название</td><td>Тип данных</td><td>Обязательность</td><td>Примечание</td></tr></thead><tbody><tr><td>ID</td><td>int</td><td>Да</td><td>ID обновляемого элемента</td></tr><tr><td>FIELDS</td><td>array</td><td>Да</td><td>Значение передаются по ссылке</td></tr></tbody></table><h3 class="pt-2">Пример подписки на событие</h3>',4)),(0,a.bF)(l.A,{code:(0,d.R1)(c)},null,8,["code"]),(0,a.bF)(u.A,null,{header:(0,a.k6)((()=>e[7]||(e[7]=[(0,a.eW)(" Присутствует возможность отмены изменения элемента. ")]))),default:(0,a.k6)((()=>[e[8]||(e[8]=(0,a.Lk)("p",null,"Если отменить изменение, то в лог файле появится соответствующее сообщение, но в результате работы импорта это не отобразится.",-1))])),_:1}),e[10]||(e[10]=(0,a.Lk)("h3",{class:"pt-2"},"Пример отмены добавления",-1)),(0,a.bF)(l.A,{code:(0,d.R1)(i)},null,8,["code"])])])]),(0,a.Lk)("article",R,[(0,a.Lk)("div",x,[e[13]||(e[13]=(0,a.Lk)("h2",{class:"card-title",id:"after-update"},"onAfterHighloadblockElementUpdate",-1)),(0,a.Lk)("div",L,[e[12]||(e[12]=(0,a.Fv)('<p>Событие вызывается после обновления элемента сущности и передаются следующие параметры</p><h3 class="pt-2">Параметры события</h3><table class="table table-dark table-striped"><thead><tr><td>Название</td><td>Тип данных</td><td>Обязательность</td><td>Примечание</td></tr></thead><tbody><tr><td>ID</td><td>int</td><td>Да</td><td>ID обновляемого элемента</td></tr><tr><td>FIELDS</td><td>array</td><td>Да</td><td>Массив с обновленными значениями</td></tr><tr><td>RESULT</td><td>Sholokhov\\Exchange\\Messages\\Type\\DataResult</td><td>Да</td><td>Результат обновления</td></tr></tbody></table><h3 class="pt-2">Пример подписки на событие</h3>',4)),(0,a.bF)(l.A,{code:(0,d.R1)(h)},null,8,["code"])])])])],64))}};const A=B;var y=A},737:function(t,e,n){n.d(e,{A:function(){return c}});var a=n(6768);const d={class:"alert alert-info mt-2",role:"alert"};function l(t,e){return(0,a.uX)(),(0,a.CE)("div",d,[(0,a.Lk)("b",null,[(0,a.RG)(t.$slots,"header")]),(0,a.RG)(t.$slots,"default")])}var r=n(1241);const s={},o=(0,r.A)(s,[["render",l]]);var c=o},2462:function(t,e,n){n.d(e,{A:function(){return o}});var a=n(6768),d=n(144),l=n(6678),r={__name:"CodeBlock",props:{code:{type:String,required:!0},lang:{type:String,default:()=>"php"}},setup(t){return(e,n)=>((0,a.uX)(),(0,a.Wv)((0,d.R1)(l.Pp),(0,a.v6)({code:t.code,lang:t.lang,highlightjs:"",theme:"stackoverflow-dark"},e.$attrs),null,16,["code","lang"]))}};const s=r;var o=s}}]);
//# sourceMappingURL=467.f4852476.js.map