"use strict";(self["webpackChunkdocumentation"]=self["webpackChunkdocumentation"]||[]).push([[268],{1332:function(t,e,n){n.d(e,{A:function(){return k}});var a=n(6768),d=n(1387),l=n(144),r=n(4232);const s={key:0};var o={__name:"NodeTree",props:{item:{type:Array,default:()=>[]}},emits:["click"],setup(t,{emit:e}){const n=(0,d.lq)(),o=e,c=t=>({name:n.name,params:{hash:t.hash}}),i=t=>{n.params.hash===t&&o("click",t)};return(e,n)=>{const u=(0,a.g2)("node-tree",!0);return(0,a.uX)(),(0,a.CE)("li",null,[(0,a.bF)((0,l.R1)(d.Wk),{to:c(t.item),onClick:n[0]||(n[0]=e=>i(t.item.hash))},{default:(0,a.k6)((()=>[(0,a.eW)((0,r.v_)(t.item.title),1)])),_:1},8,["to"]),t.item.children&&t.item.children.length?((0,a.uX)(),(0,a.CE)("ul",s,[((0,a.uX)(!0),(0,a.CE)(a.FK,null,(0,a.pI)(t.item.children,(t=>((0,a.uX)(),(0,a.Wv)(u,{key:t.title,item:t,onClick:n[1]||(n[1]=t=>o("click",t))},null,8,["item"])))),128))])):(0,a.Q3)("",!0)])}}};const c=o;var i=c;const u={class:"table-contents"};var h={__name:"TableContents",props:{items:{type:Array,default:()=>[]}},setup(t){const e=(0,d.lq)();(0,a.sV)((()=>{e.params?.hash&&n(e.params.hash)})),(0,a.wB)((()=>e.path),(()=>n(e.params.hash)));const n=t=>{setTimeout((()=>document.getElementById(t)?.scrollIntoView({behavior:"smooth"})),400)};return(e,d)=>((0,a.uX)(),(0,a.CE)("ul",u,[((0,a.uX)(!0),(0,a.CE)(a.FK,null,(0,a.pI)(t.items,(t=>((0,a.uX)(),(0,a.Wv)(i,{key:t.title,item:t,onClick:n},null,8,["item"])))),128))]))}},v=n(1241);const E=(0,v.A)(h,[["__scopeId","data-v-3bed10b0"]]);var k=E},2462:function(t,e,n){n.d(e,{A:function(){return o}});var a=n(6768),d=n(144),l=n(6678),r={__name:"CodeBlock",props:{code:{type:String,required:!0},lang:{type:String,default:()=>"php"}},setup(t){return(e,n)=>((0,a.uX)(),(0,a.Wv)((0,d.R1)(l.Pp),(0,a.v6)({code:t.code,lang:t.lang,highlightjs:"",theme:"stackoverflow-dark"},e.$attrs),null,16,["code","lang"]))}};const s=r;var o=s},4268:function(t,e,n){n.r(e),n.d(e,{default:function(){return A}});var a=n(6768),d=n(144),l=n(2462);const r="\nuse Bitrix\\Main\\Event;\nuse Bitrix\\Main\\EventManager;\n\nEventManager::getInstance()->addEventHandler(\n    'sholokhov.exchange',\n    'onBeforeIBlockElementAdd',\n    function(Event $event) {\n        $parameters = &$event->getParameters();\n        $parameters['FIELDS']['MY_FIELD'] = 15;\n        \n        return new EventResult(EventResult::SUCCESS, $parameters);\n    }\n);\n",s="\nuse Bitrix\\Main\\Event;\nuse Bitrix\\Main\\EventResult;\nuse Bitrix\\Main\\EventManager;\n\nEventManager::getInstance()->addEventHandler(\n    'sholokhov.exchange',\n    'onBeforeIBlockElementAdd',\n    function(Event $event) {        \n        return new EventResult(EventResult::ERROR, $event->getParameters());\n    }\n);\n",o="\nuse Bitrix\\Main\\Event;\nuse Bitrix\\Main\\EventManager;\n\nEventManager::getInstance()->addEventHandler(\n    'sholokhov.exchange',\n    'onAfterIBlockElementAdd',\n    function(Event $event) {\n        //...\n    }\n);\n",c="\nuse Bitrix\\Main\\Event;\nuse Bitrix\\Main\\EventResult;\nuse Bitrix\\Main\\EventManager;\n\nEventManager::getInstance()->addEventHandler(\n    'sholokhov.exchange',\n    'onBeforeIBlockElementUpdate',\n    function(Event $event) {\n        $parameters = &$event->getParameters();\n        $parameters['FIELDS']['you_field'] = \"new_value\";\n        \n        return new EventResult(EventResult::SUCCESS, $parameters);\n    }\n);\n",i="\nuse Bitrix\\Main\\Event;\nuse Bitrix\\Main\\EventResult;\nuse Bitrix\\Main\\EventManager;\n\nEventManager::getInstance()->addEventHandler(\n    'sholokhov.exchange',\n    'onBeforeIBlockElementUpdate',\n    function(Event $event) {        \n        return new EventResult(EventResult::ERROR, $event->getParameters());\n    }\n);\n",u="\nuse Bitrix\\Main\\Event;\nuse Bitrix\\Main\\EventResult;\nuse Bitrix\\Main\\EventManager;\n\nEventManager::getInstance()->addEventHandler(\n    'sholokhov.exchange',\n    'onAfterIBlockElementUpdate',\n    function(Event $event) {\n        // ...\n    }\n);\n";var h=n(1332),v=n(8522);const E={class:"card mt-5 mb-5"},k={class:"card-body"},p={class:"card-text"},m={class:"card mt-5 mb-5"},b={class:"card-body"},f={class:"card-text"},g={class:"card mt-5 mb-5"},B={class:"card-body"},I={class:"card-text"},L={class:"card mt-5 mb-5"},R={class:"card-body"},M={class:"card-text"};var x={__name:"ElementPage",setup(t){const e=(0,d.Kh)({tableContents:[{title:"onBeforeIBlockElementAdd",hash:"before-add"},{title:"onAfterIBlockElementAdd",hash:"after-add"},{title:"onBeforeIBlockElementUpdate",hash:"before-update"},{title:"onAfterIBlockElementUpdate",hash:"after-update"}]});return(t,n)=>((0,a.uX)(),(0,a.CE)(a.FK,null,[(0,a.Lk)("section",null,[n[0]||(n[0]=(0,a.Lk)("h1",null,"События импорта элементов информационного блока",-1)),n[1]||(n[1]=(0,a.Lk)("p",null,[(0,a.eW)("Класс "),(0,a.Lk)("a",{href:"/api/classes/Sholokhov-BitrixExchange-Target-IBlock-Element.html",target:"_blank"},"Element")],-1)),n[2]||(n[2]=(0,a.Lk)("h2",{class:"pt-2"},"События",-1)),(0,a.bF)(h.A,{items:e.tableContents},null,8,["items"])]),(0,a.Lk)("section",E,[(0,a.Lk)("div",k,[n[7]||(n[7]=(0,a.Lk)("h2",{class:"card-title",id:"before-add"},"onBeforeIBlockElementAdd",-1)),(0,a.Lk)("div",p,[n[5]||(n[5]=(0,a.Fv)('<p>Событие вызывается перед созданием элемента</p><h3 class="pt-2">Параметры события</h3><table class="table table-dark table-striped"><thead><tr><td>Название</td><td>Тип данных</td><td>Обязательность</td><td>Примечание</td></tr></thead><tbody><tr><td>FIELDS</td><td>array</td><td>Да</td><td>Значение передается по ссылке</td></tr></tbody></table><h3 class="pt-2">Пример подписки на событие</h3>',4)),(0,a.bF)(l.A,{code:(0,d.R1)(r)},null,8,["code"]),(0,a.bF)(v.A,null,{header:(0,a.k6)((()=>n[3]||(n[3]=[(0,a.eW)(" Присутствует возможность отмены добавления значения. ")]))),default:(0,a.k6)((()=>[n[4]||(n[4]=(0,a.Lk)("p",null,"Если отменить добавление, то в лог файле появится соответствующее сообщение, но в результате работы импорта это не отобразится.",-1))])),_:1}),n[6]||(n[6]=(0,a.Lk)("h3",{class:"pt-2"},"Пример отмены добавления",-1)),(0,a.bF)(l.A,{code:(0,d.R1)(s)},null,8,["code"])])])]),(0,a.Lk)("section",m,[(0,a.Lk)("div",b,[n[9]||(n[9]=(0,a.Lk)("h2",{class:"card-title",id:"after-add"},"onAfterIBlockElementAdd",-1)),(0,a.Lk)("div",f,[n[8]||(n[8]=(0,a.Fv)('<p>Событие вызывается после добавления элемента</p><h3 class="pt-2">Параметры события</h3><table class="table table-dark table-striped"><thead><tr><td>Название</td><td>Тип данных</td><td>Обязательность</td><td>Примечание</td></tr></thead><tbody><tr><td>ID</td><td>int</td><td>Да</td><td>ID созданного элемента</td></tr><tr><td>FIELDS</td><td>array</td><td>Да</td><td>Массив с добавляемыми значениями</td></tr><tr><td>RESULT</td><td>Sholokhov\\Exchange\\Messages\\Type\\DataResult</td><td>Да</td><td>Результат создания</td></tr></tbody></table><h3 class="pt-2">Пример подписки на событие</h3>',4)),(0,a.bF)(l.A,{code:(0,d.R1)(o)},null,8,["code"])])])]),(0,a.Lk)("section",g,[(0,a.Lk)("div",B,[n[14]||(n[14]=(0,a.Lk)("h2",{class:"card-title",id:"before-update"},"onBeforeIBlockElementUpdate",-1)),(0,a.Lk)("div",I,[n[12]||(n[12]=(0,a.Fv)('<p>Событие перед изменением элемента</p><h3 class="pt-2">Параметры события</h3><table class="table table-dark table-striped"><thead><tr><td>Название</td><td>Тип данных</td><td>Обязательность</td><td>Примечание</td></tr></thead><tbody><tr><td>ID</td><td>int</td><td>Да</td><td>ID обновляемого элемента</td></tr><tr><td>FIELDS</td><td>array</td><td>Да</td><td>Значение передаются по ссылке</td></tr></tbody></table><h3 class="pt-2">Пример подписки на событие</h3>',4)),(0,a.bF)(l.A,{code:(0,d.R1)(c)},null,8,["code"]),(0,a.bF)(v.A,null,{header:(0,a.k6)((()=>n[10]||(n[10]=[(0,a.eW)(" Присутствует возможность отмены изменения элемента. ")]))),default:(0,a.k6)((()=>[n[11]||(n[11]=(0,a.Lk)("p",null,"Если отменить изменение, то в лог файле появится соответствующее сообщение, но в результате работы импорта это не отобразится.",-1))])),_:1}),n[13]||(n[13]=(0,a.Lk)("h3",{class:"pt-2"},"Пример отмены добавления",-1)),(0,a.bF)(l.A,{code:(0,d.R1)(i)},null,8,["code"])])])]),(0,a.Lk)("section",L,[(0,a.Lk)("div",R,[n[16]||(n[16]=(0,a.Lk)("h2",{class:"card-title",id:"after-update"},"onAfterIBlockElementUpdate",-1)),(0,a.Lk)("div",M,[n[15]||(n[15]=(0,a.Fv)('<p>Событие вызывается после обновления элемента сущности и передаются следующие параметры</p><h3 class="pt-2">Параметры события</h3><table class="table table-dark table-striped"><thead><tr><td>Название</td><td>Тип данных</td><td>Обязательность</td><td>Примечание</td></tr></thead><tbody><tr><td>ID</td><td>int</td><td>Да</td><td>ID обновляемого элемента</td></tr><tr><td>FIELDS</td><td>array</td><td>Да</td><td>Массив с обновленными значениями</td></tr><tr><td>RESULT</td><td>Sholokhov\\Exchange\\Messages\\Type\\DataResult</td><td>Да</td><td>Результат обновления</td></tr></tbody></table><h3 class="pt-2">Пример подписки на событие</h3>',4)),(0,a.bF)(l.A,{code:(0,d.R1)(u)},null,8,["code"])])])])],64))}};const y=x;var A=y},8522:function(t,e,n){n.d(e,{A:function(){return c}});var a=n(6768);const d={class:"alert alert-info mt-2",role:"alert"};function l(t,e){return(0,a.uX)(),(0,a.CE)("div",d,[(0,a.Lk)("p",null,[(0,a.Lk)("b",null,[(0,a.RG)(t.$slots,"header")])]),(0,a.RG)(t.$slots,"default")])}var r=n(1241);const s={},o=(0,r.A)(s,[["render",l]]);var c=o}}]);
//# sourceMappingURL=268.221208b6.js.map