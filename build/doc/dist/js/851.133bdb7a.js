"use strict";(self["webpackChunkdocumentation"]=self["webpackChunkdocumentation"]||[]).push([[851],{1332:function(e,n,t){t.d(n,{A:function(){return m}});var l=t(6768),a=t(1387),r=t(144),s=t(4232);const u={key:0};var o={__name:"NodeTree",props:{item:{type:Array,default:()=>[]}},emits:["click"],setup(e,{emit:n}){const t=(0,a.lq)(),o=n,i=e=>({name:t.name,params:{hash:e.hash}}),c=e=>{t.params.hash===e&&o("click",e)};return(n,t)=>{const h=(0,l.g2)("node-tree",!0);return(0,l.uX)(),(0,l.CE)("li",null,[(0,l.bF)((0,r.R1)(a.Wk),{to:i(e.item),onClick:t[0]||(t[0]=n=>c(e.item.hash))},{default:(0,l.k6)((()=>[(0,l.eW)((0,s.v_)(e.item.title),1)])),_:1},8,["to"]),e.item.children&&e.item.children.length?((0,l.uX)(),(0,l.CE)("ul",u,[((0,l.uX)(!0),(0,l.CE)(l.FK,null,(0,l.pI)(e.item.children,(e=>((0,l.uX)(),(0,l.Wv)(h,{key:e.title,item:e,onClick:t[1]||(t[1]=e=>o("click",e))},null,8,["item"])))),128))])):(0,l.Q3)("",!0)])}}};const i=o;var c=i;const h={class:"table-contents"};var d={__name:"TableContents",props:{items:{type:Array,default:()=>[]}},setup(e){const n=(0,a.lq)();(0,l.sV)((()=>{n.params?.hash&&t(n.params.hash)})),(0,l.wB)((()=>n.path),(()=>t(n.params.hash)));const t=e=>{setTimeout((()=>document.getElementById(e)?.scrollIntoView({behavior:"smooth"})),400)};return(n,a)=>((0,l.uX)(),(0,l.CE)("ul",h,[((0,l.uX)(!0),(0,l.CE)(l.FK,null,(0,l.pI)(e.items,(e=>((0,l.uX)(),(0,l.Wv)(c,{key:e.title,item:e,onClick:t},null,8,["item"])))),128))]))}},k=t(1241);const p=(0,k.A)(d,[["__scopeId","data-v-3bed10b0"]]);var m=p},2241:function(e,n,t){t.d(n,{A:function(){return i}});var l=t(6768);const a={class:"mb-5"};function r(e,n){return(0,l.uX)(),(0,l.CE)("article",a,[(0,l.Lk)("header",null,[(0,l.RG)(e.$slots,"header")]),(0,l.Lk)("main",null,[(0,l.RG)(e.$slots,"default")])])}var s=t(1241);const u={},o=(0,s.A)(u,[["render",r]]);var i=o},2462:function(e,n,t){t.d(n,{A:function(){return o}});var l=t(6768),a=t(144),r=t(6678),s={__name:"CodeBlock",props:{code:{type:String,required:!0},lang:{type:String,default:()=>"php"}},setup(e){return(n,t)=>((0,l.uX)(),(0,l.Wv)((0,a.R1)(r.Pp),(0,l.v6)({code:e.code,lang:e.lang,highlightjs:"",theme:"stackoverflow-dark"},n.$attrs),null,16,["code","lang"]))}};const u=s;var o=u},5851:function(e,n,t){t.r(n),t.d(n,{default:function(){return h}});var l=t(6768),a=t(144),r=t(2241),s=t(2462),u=t(9604),o=t(1332),i={__name:"ConfigurationPage",setup(e){const n=(0,a.Kh)({tableContents:[{title:"Введение",hash:"vvedenie"},{title:"Стандартная конфигурация",hash:"standart-config",children:[{title:"Включение деактивации",hash:"on-deactivate"},{title:"Результат обмена",hash:"set-result"}]}]});return(e,t)=>{const i=(0,l.g2)("router-link");return(0,l.uX)(),(0,l.CE)(l.FK,null,[(0,l.bF)(r.A,null,{default:(0,l.k6)((()=>[t[0]||(t[0]=(0,l.Lk)("h2",null,"Конфигурирование",-1)),(0,l.bF)(o.A,{items:n.tableContents},null,8,["items"])])),_:1}),(0,l.bF)(r.A,null,{header:(0,l.k6)((()=>t[1]||(t[1]=[(0,l.Lk)("h2",{id:"vvedenie"},"Введение",-1)]))),default:(0,l.k6)((()=>[t[2]||(t[2]=(0,l.Lk)("p",null,[(0,l.eW)(" Все основные конфигурации обмена указываются в его конструктор. "),(0,l.Lk)("br"),(0,l.eW)(" Конфигурация представляет собой ассоциативный массив. Конфигурация обмена является защищенной на чтение и изменение из вне. После передачи конфигурации в конструктор обмена мы больше не сможем их скорректировать и прочитать. Могут встречаться частные случае, когда пользователю предоставляется возможность переопределить конфигурацию "),(0,l.Lk)("br"),(0,l.eW)(" Конфигурация позволяет настроить поведение вашего обмена и указать куда производится обмен. Если указать некорректную конфигурацию, то при инициализации обмена мы можем получить исключение - стоит учесть данный момент. ")],-1))])),_:1}),(0,l.bF)(r.A,null,{header:(0,l.k6)((()=>t[3]||(t[3]=[(0,l.Lk)("h2",{id:"standart-config"},"Стандартная конфигурация",-1)]))),default:(0,l.k6)((()=>[t[6]||(t[6]=(0,l.Lk)("p",null,[(0,l.eW)(" Все стандартные обмены являются наследниками класса "),(0,l.Lk)("a",{href:"./api/classes/Sholokhov-BitrixExchange-Exchange.html",target:"_blank"},"Exchange"),(0,l.eW)(", который позволяет настроить: ")],-1)),t[7]||(t[7]=(0,l.Lk)("ul",null,[(0,l.Lk)("li",null,"Включение деактивации"),(0,l.Lk)("li",null,"Результат обмена")],-1)),(0,l.Lk)("p",null,[t[5]||(t[5]=(0,l.eW)(" Каждый отдельно взятый обмен содержит свои доступные параметры и значения. Все доступные обмены описаны в блоке ")),(0,l.bF)(i,{to:{name:"import"}},{default:(0,l.k6)((()=>t[4]||(t[4]=[(0,l.eW)("Импорт")]))),_:1})])])),_:1}),(0,l.bF)(r.A,null,{default:(0,l.k6)((()=>[t[8]||(t[8]=(0,l.Lk)("h3",{id:"on-deactivate"},"Включение деактивации",-1)),t[9]||(t[9]=(0,l.Lk)("p",null,[(0,l.eW)(" После обмена данных производит деактивацию всех значений, которые не приняли участие. "),(0,l.Lk)("br"),(0,l.eW)(" По умолчанию деактивацию отключена. Логика деактивации регламентируется наследником, и она не является обязательной. Если наследник откажется реализовывать данный функционал, то данный флаг не повлияет на результат обмена. ")],-1)),(0,l.bF)(s.A,{code:(0,a.R1)(u.LU)},null,8,["code"])])),_:1}),(0,l.bF)(r.A,null,{header:(0,l.k6)((()=>t[10]||(t[10]=[(0,l.Lk)("h2",{id:"set-result"},"Результат обмена",-1)]))),default:(0,l.k6)((()=>[t[11]||(t[11]=(0,l.Lk)("p",null,[(0,l.eW)(" Каждый обмен обязан вернуть объект результата выполнения, который реализует интерфейс "),(0,l.Lk)("a",{href:"./api/classes/Sholokhov-BitrixExchange-Messages-ExchangeResultInterface.html",target:"_blank"},"ExchangeResultInterface"),(0,l.Lk)("br"),(0,l.eW)(" Результат содержит все ошибки, которые возникли и все идентификаторы значений, которые принимали участие в импорте\\экспорте. В угоду оптимизации по умолчанию результат не хранит идентификаторы значений, и для этого нам необходимо сконфигурировать обмен. "),(0,l.Lk)("br")],-1)),(0,l.bF)(s.A,{code:(0,a.R1)(u.uN)},null,8,["code"]),t[12]||(t[12]=(0,l.Lk)("p",null,[(0,l.eW)(" Метод "),(0,l.Lk)("strong",null,"setResultRepository"),(0,l.eW)(" принимает значение, которое является "),(0,l.Lk)("a",{href:"https://www.php.net/manual/en/language.types.callable.php",target:"_blank"},"callable"),(0,l.eW)(", и вернет новый объект хранилища реализующий интерфейс "),(0,l.Lk)("a",{href:"./api/classes/Sholokhov-BitrixExchange-Repository-Result-ResultRepositoryInterface.html",target:"_blank"},"ResultRepositoryInterface"),(0,l.eW)(". ")],-1))])),_:1})],64)}}};const c=i;var h=c},9604:function(e,n,t){t.d(n,{LU:function(){return l},uN:function(){return a}}),n.Ay="\nuse Sholokhov\\BitrixExchange\\Fields\\Field;\nuse Sholokhov\\BitrixExchange\\Target\\IBlock\\Element;\n\n$options = [\n    'iblock_id' => 13\n];\n\n$data = [\n    [\n        'id' => 56,\n        'name' => 'Какой-то элемент',\n    ],\n    [\n        'id' => 15,\n        'name' => 'Какой-то элемент 2',\n    ]\n];\n\n$map = [\n    (new Field)\n        ->setOut('id')\n        ->setIn('XML_ID')\n        ->setPrimary(),\n    (new Field)\n        ->setOut('name')\n        ->setIn('NAME'),\n];\n\n$exchange = new Element($options);\n$exchange->setMap($map);\n$result = $exchange->execute($data);\n";const l="\n$config = [\n    'deactivate' => true,\n];\n\nnew Exchange($config);\n",a="\n$exchange = new Exchange;\n$exchange->setResultRepository($callback);\n"}}]);
//# sourceMappingURL=851.133bdb7a.js.map