"use strict";(self["webpackChunkdocumentation"]=self["webpackChunkdocumentation"]||[]).push([[369],{2369:function(t,e,n){n.r(e),n.d(e,{default:function(){return x}});var a=n(6768),r=n(144),d=n(2462);const o="\nuse Bitrix\\Main\\Event;\nuse Bitrix\\Main\\EventManager;\n\nEventManager::getInstance()->addEventHandler(\n    'sholokhov.exchange',\n    'onBeforeIBlockPropertyEnumerationAdd',\n    function(Event $event) {\n        $parameters = &$event->getParameters();\n        $parameters['FIELDS']['XML_ID'] = 'my_value';\n        \n        return new EventResult(EventResult::SUCCESS, $parameters);\n    }\n);\n",l="\nuse Bitrix\\Main\\Event;\nuse Bitrix\\Main\\EventResult;\nuse Bitrix\\Main\\EventManager;\n\nEventManager::getInstance()->addEventHandler(\n    'sholokhov.exchange',\n    'onBeforeIBlockPropertyEnumerationAdd',\n    function(Event $event) {        \n        return new EventResult(EventResult::ERROR, $event->getParameters());\n    }\n);\n",i="\nuse Bitrix\\Main\\Event;\nuse Bitrix\\Main\\EventManager;\n\nEventManager::getInstance()->addEventHandler(\n    'sholokhov.exchange',\n    'onAfterIBlockPropertyEnumerationAdd',\n    function(Event $event) {\n        //...\n    }\n);\n",s="\nuse Bitrix\\Main\\Event;\nuse Bitrix\\Main\\EventResult;\nuse Bitrix\\Main\\EventManager;\n\nEventManager::getInstance()->addEventHandler(\n    'sholokhov.exchange',\n    'onBeforeIBlockPropertyEnumerationUpdate',\n    function(Event $event) {\n        $parameters = &$event->getParameters();\n        $parameters['FIELDS']['XML_ID'] = \"new_value\";\n        \n        return new EventResult(EventResult::SUCCESS, $parameters);\n    }\n);\n",c="\nuse Bitrix\\Main\\Event;\nuse Bitrix\\Main\\EventResult;\nuse Bitrix\\Main\\EventManager;\n\nEventManager::getInstance()->addEventHandler(\n    'sholokhov.exchange',\n    'onBeforeIBlockPropertyEnumerationUpdate',\n    function(Event $event) {        \n        return new EventResult(EventResult::ERROR, $event->getParameters());\n    }\n);\n",u="\nuse Bitrix\\Main\\Event;\nuse Bitrix\\Main\\EventResult;\nuse Bitrix\\Main\\EventManager;\n\nEventManager::getInstance()->addEventHandler(\n    'sholokhov.exchange',\n    'onAfterIBlockPropertyEnumerationUpdate',\n    function(Event $event) {\n        // ...\n    }\n);\n",p={class:"card mt-5 mb-5"},v={class:"card-body"},h={class:"card-text"},E={class:"card mt-5 mb-5"},k={class:"card-body"},b={class:"card-text"},m={class:"card mt-5 mb-5"},y={class:"card-body"},f={class:"card-text"},g={class:"card mt-5 mb-5"},B={class:"card-body"},I={class:"card-text"};var L={__name:"ListEnumiration",setup(t){return(t,e)=>((0,a.uX)(),(0,a.CE)(a.FK,null,[e[12]||(e[12]=(0,a.Fv)('<article><h1>События импорта значений списка в свойство информационного блока</h1><p>Класс <a href="/api/classes/Sholokhov-BitrixExchange-Target-IBlock-Property-PropertyEnumeration.html" target="_blank">PropertyEnumeration</a></p><h2>События</h2><ul><li><a href="#onbeforeiblockpropertyenumerationadd">onBeforeIBlockPropertyEnumerationAdd</a></li><li><a href="#onafteriblockpropertyenumerationadd">onAfterIBlockPropertyEnumerationAdd</a></li><li><a href="#onbeforeiblockpropertyenumerationupdate">onBeforeIBlockPropertyEnumerationUpdate</a></li><li><a href="#onafteriblockpropertyenumerationupdate">onAfterIBlockPropertyEnumerationUpdate</a></li></ul></article>',1)),(0,a.Lk)("article",p,[(0,a.Lk)("div",v,[e[3]||(e[3]=(0,a.Lk)("h2",{class:"card-title",id:"onbeforeiblockpropertyenumerationadd"},"onBeforeIBlockPropertyEnumerationAdd",-1)),(0,a.Lk)("div",h,[e[0]||(e[0]=(0,a.Fv)('<p>Событие вызывается перед созданием значения списка</p><h3 class="pt-2">Параметры события</h3><table class="table table-dark table-striped"><thead><tr><td>Название</td><td>Тип данных</td><td>Обязательность</td><td>Примечание</td></tr></thead><tbody><tr><td>FIELDS</td><td>array</td><td>Да</td><td>Значение передается по ссылке</td></tr></tbody></table><h3 class="pt-2">Пример подписки на событие</h3>',4)),(0,a.bF)(d.A,{code:(0,r.R1)(o)},null,8,["code"]),e[1]||(e[1]=(0,a.Lk)("div",{class:"alert alert-info mt-2",role:"alert"},[(0,a.Lk)("p",null,"Присутствует возможность отмены добавления значения."),(0,a.Lk)("p",null,"Если отменить добавление, то в лог файле появится соответствующее сообщение, но в результате работы импорта это не отобразится.")],-1)),e[2]||(e[2]=(0,a.Lk)("h3",{class:"pt-2"},"Пример отмены добавления",-1)),(0,a.bF)(d.A,{code:(0,r.R1)(l)},null,8,["code"])])])]),(0,a.Lk)("article",E,[(0,a.Lk)("div",k,[e[5]||(e[5]=(0,a.Lk)("h2",{class:"card-title",id:"onafteriblockpropertyenumerationadd"},"onAfterIBlockPropertyEnumerationAdd",-1)),(0,a.Lk)("div",b,[e[4]||(e[4]=(0,a.Fv)('<p>Событие вызывается после добавления значения в список</p><h3 class="pt-2">Параметры события</h3><table class="table table-dark table-striped"><thead><tr><td>Название</td><td>Тип данных</td><td>Обязательность</td><td>Примечание</td></tr></thead><tbody><tr><td>ID</td><td>int</td><td>Да</td><td>ID созданного элемента</td></tr><tr><td>FIELDS</td><td>array</td><td>Да</td><td>Массив с добавляемыми значениями</td></tr><tr><td>RESULT</td><td>Sholokhov\\Exchange\\Messages\\Type\\DataResult</td><td>Да</td><td>Результат создания</td></tr></tbody></table><h3 class="pt-2">Пример подписки на событие</h3>',4)),(0,a.bF)(d.A,{code:(0,r.R1)(i)},null,8,["code"])])])]),(0,a.Lk)("article",m,[(0,a.Lk)("div",y,[e[9]||(e[9]=(0,a.Lk)("h2",{class:"card-title",id:"onbeforeiblockpropertyenumerationupdate"},"onBeforeIBlockPropertyEnumerationUpdate",-1)),(0,a.Lk)("div",f,[e[6]||(e[6]=(0,a.Fv)('<p>Событие перед изменением элемента</p><h3 class="pt-2">Параметры события</h3><table class="table table-dark table-striped"><thead><tr><td>Название</td><td>Тип данных</td><td>Обязательность</td><td>Примечание</td></tr></thead><tbody><tr><td>ID</td><td>int</td><td>Да</td><td>ID обновляемого элемента</td></tr><tr><td>FIELDS</td><td>array</td><td>Да</td><td>Значение передаются по ссылке</td></tr></tbody></table><h3 class="pt-2">Пример подписки на событие</h3>',4)),(0,a.bF)(d.A,{code:(0,r.R1)(s)},null,8,["code"]),e[7]||(e[7]=(0,a.Lk)("div",{class:"alert alert-info mt-2",role:"alert"},[(0,a.Lk)("p",null,"Присутствует возможность отмены изменения значения."),(0,a.Lk)("p",null,"Если отменить изменение, то в лог файле появится соответствующее сообщение, но в результате работы импорта это не отобразится.")],-1)),e[8]||(e[8]=(0,a.Lk)("h3",{class:"pt-2"},"Пример отмены добавления",-1)),(0,a.bF)(d.A,{code:(0,r.R1)(c)},null,8,["code"])])])]),(0,a.Lk)("article",g,[(0,a.Lk)("div",B,[e[11]||(e[11]=(0,a.Lk)("h2",{class:"card-title",id:"onafteriblockpropertyenumerationupdate"},"onAfterIBlockPropertyEnumerationUpdate",-1)),(0,a.Lk)("div",I,[e[10]||(e[10]=(0,a.Fv)('<p>Событие вызывается после обновления значения списка</p><h3 class="pt-2">Параметры события</h3><table class="table table-dark table-striped"><thead><tr><td>Название</td><td>Тип данных</td><td>Обязательность</td><td>Примечание</td></tr></thead><tbody><tr><td>ID</td><td>int</td><td>Да</td><td>ID обновляемого элемента</td></tr><tr><td>FIELDS</td><td>array</td><td>Да</td><td>Массив с обновленными значениями</td></tr><tr><td>RESULT</td><td>Sholokhov\\Exchange\\Messages\\Type\\DataResult</td><td>Да</td><td>Результат обновления</td></tr></tbody></table><h3 class="pt-2">Пример подписки на событие</h3>',4)),(0,a.bF)(d.A,{code:(0,r.R1)(u)},null,8,["code"])])])])],64))}};const M=L;var x=M},2462:function(t,e,n){n.d(e,{A:function(){return i}});var a=n(6768),r=n(144),d=n(6678),o={__name:"CodeBlock",props:{code:{type:String,required:!0},lang:{type:String,default:()=>"php"}},setup(t){return(e,n)=>((0,a.uX)(),(0,a.Wv)((0,r.R1)(d.Pp),(0,a.v6)({code:t.code,lang:t.lang,highlightjs:"",theme:"stackoverflow-dark"},e.$attrs),null,16,["code","lang"]))}};const l=o;var i=l}}]);
//# sourceMappingURL=369.1231aeda.js.map