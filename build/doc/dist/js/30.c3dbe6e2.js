"use strict";(self["webpackChunkdocumentation"]=self["webpackChunkdocumentation"]||[]).push([[30],{2241:function(n,e,t){t.d(e,{A:function(){return u}});var a=t(6768);const r={class:"mb-5"};function o(n,e){return(0,a.uX)(),(0,a.CE)("article",r,[(0,a.Lk)("header",null,[(0,a.RG)(n.$slots,"header")]),(0,a.Lk)("main",null,[(0,a.RG)(n.$slots,"default")])])}var c=t(1241);const i={},l=(0,c.A)(i,[["render",o]]);var u=l},2462:function(n,e,t){t.d(e,{A:function(){return l}});var a=t(6768),r=t(144),o=t(6678),c={__name:"CodeBlock",props:{code:{type:String,required:!0},lang:{type:String,default:()=>"php"}},setup(n){return(e,t)=>((0,a.uX)(),(0,a.Wv)((0,r.R1)(o.Pp),(0,a.v6)({code:n.code,lang:n.lang,highlightjs:"",theme:"stackoverflow-dark"},e.$attrs),null,16,["code","lang"]))}};const i=c;var l=i},7030:function(n,e,t){t.r(e),t.d(e,{default:function(){return s}});var a=t(6768),r=t(144),o=t(2462),c=t(9604),i=t(2241),l={__name:"CreatedPage",setup(n){return(n,e)=>((0,a.uX)(),(0,a.Wv)(i.A,null,{header:(0,a.k6)((()=>e[0]||(e[0]=[(0,a.Lk)("h1",null,"Создание первого обмена",-1)]))),default:(0,a.k6)((()=>[e[1]||(e[1]=(0,a.eW)(" После установки пакета через Composer вы готовы создавать обмены данных. Создадим свой первый обмен ")),(0,a.bF)(o.A,{code:(0,r.R1)(c.Ay)},null,8,["code"])])),_:1}))}};const u=l;var s=u},9604:function(n,e,t){t.d(e,{LU:function(){return a},Tj:function(){return o},u$:function(){return i},uN:function(){return r},vF:function(){return c}}),e.Ay="\nuse Sholokhov\\BitrixExchange\\Fields\\Field;\nuse Sholokhov\\BitrixExchange\\Target\\IBlock\\Element;\n\n$options = [\n    'iblock_id' => 13\n];\n\n$data = [\n    [\n        'id' => 56,\n        'name' => 'Какой-то элемент',\n    ],\n    [\n        'id' => 15,\n        'name' => 'Какой-то элемент 2',\n    ]\n];\n\n$map = [\n    (new Field)\n        ->setFrom('id')\n        ->setTo('XML_ID')\n        ->setPrimary(),\n    (new Field)\n        ->setFrom('name')\n        ->setTo('NAME'),\n];\n\n$exchange = new Element($options);\n$exchange->setMap($map);\n$result = $exchange->execute($data);\n";const a="\n$config = [\n    'deactivate' => true,\n];\n\nnew Exchange($config);\n",r="\n$exchange = new Exchange;\n$exchange->setResultRepository($callback);\n",o="\nuse Sholokhov\\BitrixExchange\\Fields\\Field;\nuse Sholokhov\\BitrixExchange\\Fields\\IBlock\\IBlockElementField;\n\n$source = [\n    [\n        'name' => 'Название элемента',\n        'price' => 15.2\n    ],\n    [\n        'name' => 'Еще какой-то товар',\n        'price' => 17.2,\n    ],\n    [\n        'name' => 'Хороший товар',\n        'price' => 15.2,\n        'image' => 'https://example/upload/image.png'\n    ]\n];\n\n$map = [\n    (new Field)\n        ->setFrom('name')\n        ->setTo('NAME')\n        ->setPrimary(),\n    (new IBlockElementField)\n        ->setFrom('image')\n        ->setTo('MORE_PHOTO')\n];\n\n$exchange->setMap($map);\n$exchange->execute($source);\n",c="\n/** @var Psr\\Log\\LoggerInterface $logger **/\n$logger = new YourLogger;\n\n$exchange = new Exchange;\n$exchange->setLogger($logger);\n",i="\n// Будет вызываться вторым\n$exchange->addPrepared($myPreparation);\n\n// Будет вызываться первым\n$exchange->addPrepared($preparation2);\n"}}]);
//# sourceMappingURL=30.c3dbe6e2.js.map