{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, unref as _unref, withCtx as _withCtx, createVNode as _createVNode, resolveComponent as _resolveComponent, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nimport { RouterLink } from \"vue-router\";\nexport default {\n  __name: 'NodeTree',\n  props: {\n    item: {\n      type: Array,\n      default: () => []\n    }\n  },\n  setup(__props) {\n    return (_ctx, _cache) => {\n      const _component_node_tree = _resolveComponent(\"node-tree\", true);\n      return _openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.items, row => {\n        return _openBlock(), _createElementBlock(\"li\", {\n          key: row.title\n        }, [_createVNode(_unref(RouterLink), {\n          to: _ctx.to(row)\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString(row.title), 1)]),\n          _: 2\n        }, 1032, [\"to\"]), __props.item.children && __props.item.children.length ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(__props.item.children, children => {\n          return _openBlock(), _createBlock(_component_node_tree, {\n            key: children.title,\n            item: children\n          }, null, 8, [\"item\"]);\n        }), 128))])) : _createCommentVNode(\"\", true)]);\n      }), 128);\n    };\n  }\n};","map":{"version":3,"names":["RouterLink"],"sources":["/home/sholokhov/docker/exchange/local/php_interface/sholokhov.bitrix-exchange/build/doc/src/components/table-contents/NodeTree.vue"],"sourcesContent":["<script setup>\nimport {defineProps} from 'vue';\nimport {RouterLink} from \"vue-router\";\n\ndefineProps({\n  item: {type: Array, default: () => []}\n})\n</script>\n\n<template>\n  <li v-for=\"row in items\" :key=\"row.title\">\n    <router-link :to=\"to(row)\">{{row.title}}</router-link>\n\n    <ul v-if=\"item.children && item.children.length\">\n      <node-tree v-for=\"children in item.children\" :key=\"children.title\" :item=\"children\" />\n    </ul>\n  </li>\n</template>"],"mappings":";;;;AAEA,SAAQA,UAAU,QAAO,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}