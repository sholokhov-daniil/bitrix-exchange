{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, createVNode as _createVNode, unref as _unref, createStaticVNode as _createStaticVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"card mt-5 mb-5\"\n};\nconst _hoisted_2 = {\n  class: \"card-body\"\n};\nconst _hoisted_3 = {\n  class: \"card-text\"\n};\nconst _hoisted_4 = {\n  class: \"card mt-5 mb-5\"\n};\nconst _hoisted_5 = {\n  class: \"card-body\"\n};\nconst _hoisted_6 = {\n  class: \"card-text\"\n};\nconst _hoisted_7 = {\n  class: \"card mt-5 mb-5\"\n};\nconst _hoisted_8 = {\n  class: \"card-body\"\n};\nconst _hoisted_9 = {\n  class: \"card-text\"\n};\nconst _hoisted_10 = {\n  class: \"card mt-5 mb-5\"\n};\nconst _hoisted_11 = {\n  class: \"card-body\"\n};\nconst _hoisted_12 = {\n  class: \"card-text\"\n};\nimport { reactive } from 'vue';\nimport CodeBlock from \"@/components/block-code/CodeBlock.vue\";\nimport { BeforeAdd, CancelBeforeAdd, AfterAdd, BeforeUpdate, CancelBeforeUpdate, AfterUpdate } from \"@/data/codes/php/events/iblock/element/import\";\nimport TableContents from \"@/components/table-contents/TableContents.vue\";\nexport default {\n  __name: 'ElementPage',\n  setup(__props) {\n    const data = reactive({\n      tableContents: [{\n        title: 'onBeforeIBlockElementAdd',\n        hash: 'before-add'\n      }, {\n        title: 'onAfterIBlockElementAdd',\n        hash: 'after-add'\n      }, {\n        title: 'onBeforeIBlockElementUpdate',\n        hash: 'before-update'\n      }, {\n        title: 'onAfterIBlockElementUpdate',\n        hash: 'after-update'\n      }]\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"section\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"h1\", null, \"События импорта элементов информационного блока\", -1)), _cache[1] || (_cache[1] = _createElementVNode(\"p\", null, [_createTextVNode(\"Класс \"), _createElementVNode(\"a\", {\n        href: \"/api/classes/Sholokhov-BitrixExchange-Target-IBlock-Element.html\",\n        target: \"_blank\"\n      }, \"Element\")], -1)), _cache[2] || (_cache[2] = _createElementVNode(\"h2\", {\n        class: \"pt-2\"\n      }, \"События\", -1)), _createVNode(TableContents, {\n        items: data.tableContents\n      }, null, 8, [\"items\"])]), _createElementVNode(\"section\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[6] || (_cache[6] = _createElementVNode(\"h2\", {\n        class: \"card-title\",\n        id: \"before-add\"\n      }, \"onBeforeIBlockElementAdd\", -1)), _createElementVNode(\"div\", _hoisted_3, [_cache[3] || (_cache[3] = _createStaticVNode(\"<p>Событие вызывается перед созданием элемента</p><h3 class=\\\"pt-2\\\">Параметры события</h3><table class=\\\"table table-dark table-striped\\\"><thead><tr><td>Название</td><td>Тип данных</td><td>Обязательность</td><td>Примечание</td></tr></thead><tbody><tr><td>FIELDS</td><td>array</td><td>Да</td><td>Значение передается по ссылке</td></tr></tbody></table><h3 class=\\\"pt-2\\\">Пример подписки на событие</h3>\", 4)), _createVNode(CodeBlock, {\n        code: _unref(BeforeAdd)\n      }, null, 8, [\"code\"]), _cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n        class: \"alert alert-info mt-2\",\n        role: \"alert\"\n      }, [_createElementVNode(\"p\", null, \"Присутствует возможность отмены добавления значения.\"), _createElementVNode(\"p\", null, \"Если отменить добавление, то в лог файле появится соответствующее сообщение, но в результате работы импорта это не отобразится.\")], -1)), _cache[5] || (_cache[5] = _createElementVNode(\"h3\", {\n        class: \"pt-2\"\n      }, \"Пример отмены добавления\", -1)), _createVNode(CodeBlock, {\n        code: _unref(CancelBeforeAdd)\n      }, null, 8, [\"code\"])])])]), _createElementVNode(\"section\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_cache[8] || (_cache[8] = _createElementVNode(\"h2\", {\n        class: \"card-title\",\n        id: \"after-add\"\n      }, \"onAfterIBlockElementAdd\", -1)), _createElementVNode(\"div\", _hoisted_6, [_cache[7] || (_cache[7] = _createStaticVNode(\"<p>Событие вызывается после добавления элемента</p><h3 class=\\\"pt-2\\\">Параметры события</h3><table class=\\\"table table-dark table-striped\\\"><thead><tr><td>Название</td><td>Тип данных</td><td>Обязательность</td><td>Примечание</td></tr></thead><tbody><tr><td>ID</td><td>int</td><td>Да</td><td>ID созданного элемента</td></tr><tr><td>FIELDS</td><td>array</td><td>Да</td><td>Массив с добавляемыми значениями</td></tr><tr><td>RESULT</td><td>Sholokhov\\\\Exchange\\\\Messages\\\\Type\\\\DataResult</td><td>Да</td><td>Результат создания</td></tr></tbody></table><h3 class=\\\"pt-2\\\">Пример подписки на событие</h3>\", 4)), _createVNode(CodeBlock, {\n        code: _unref(AfterAdd)\n      }, null, 8, [\"code\"])])])]), _createElementVNode(\"section\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_cache[12] || (_cache[12] = _createElementVNode(\"h2\", {\n        class: \"card-title\",\n        id: \"before-update\"\n      }, \"onBeforeIBlockElementUpdate\", -1)), _createElementVNode(\"div\", _hoisted_9, [_cache[9] || (_cache[9] = _createStaticVNode(\"<p>Событие перед изменением элемента</p><h3 class=\\\"pt-2\\\">Параметры события</h3><table class=\\\"table table-dark table-striped\\\"><thead><tr><td>Название</td><td>Тип данных</td><td>Обязательность</td><td>Примечание</td></tr></thead><tbody><tr><td>ID</td><td>int</td><td>Да</td><td>ID обновляемого элемента</td></tr><tr><td>FIELDS</td><td>array</td><td>Да</td><td>Значение передаются по ссылке</td></tr></tbody></table><h3 class=\\\"pt-2\\\">Пример подписки на событие</h3>\", 4)), _createVNode(CodeBlock, {\n        code: _unref(BeforeUpdate)\n      }, null, 8, [\"code\"]), _cache[10] || (_cache[10] = _createElementVNode(\"div\", {\n        class: \"alert alert-info mt-2\",\n        role: \"alert\"\n      }, [_createElementVNode(\"p\", null, \"Присутствует возможность отмены изменения элемента.\"), _createElementVNode(\"p\", null, \"Если отменить изменение, то в лог файле появится соответствующее сообщение, но в результате работы импорта это не отобразится.\")], -1)), _cache[11] || (_cache[11] = _createElementVNode(\"h3\", {\n        class: \"pt-2\"\n      }, \"Пример отмены добавления\", -1)), _createVNode(CodeBlock, {\n        code: _unref(CancelBeforeUpdate)\n      }, null, 8, [\"code\"])])])]), _createElementVNode(\"section\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_cache[14] || (_cache[14] = _createElementVNode(\"h2\", {\n        class: \"card-title\",\n        id: \"after-update\"\n      }, \"onAfterIBlockElementUpdate\", -1)), _createElementVNode(\"div\", _hoisted_12, [_cache[13] || (_cache[13] = _createStaticVNode(\"<p>Событие вызывается после обновления элемента сущности и передаются следующие параметры</p><h3 class=\\\"pt-2\\\">Параметры события</h3><table class=\\\"table table-dark table-striped\\\"><thead><tr><td>Название</td><td>Тип данных</td><td>Обязательность</td><td>Примечание</td></tr></thead><tbody><tr><td>ID</td><td>int</td><td>Да</td><td>ID обновляемого элемента</td></tr><tr><td>FIELDS</td><td>array</td><td>Да</td><td>Массив с обновленными значениями</td></tr><tr><td>RESULT</td><td>Sholokhov\\\\Exchange\\\\Messages\\\\Type\\\\DataResult</td><td>Да</td><td>Результат обновления</td></tr></tbody></table><h3 class=\\\"pt-2\\\">Пример подписки на событие</h3>\", 4)), _createVNode(CodeBlock, {\n        code: _unref(AfterUpdate)\n      }, null, 8, [\"code\"])])])])], 64);\n    };\n  }\n};","map":{"version":3,"names":["reactive","CodeBlock","BeforeAdd","CancelBeforeAdd","AfterAdd","BeforeUpdate","CancelBeforeUpdate","AfterUpdate","TableContents","data","tableContents","title","hash"],"sources":["/home/sholokhov/docker/exchange/local/php_interface/sholokhov.bitrix-exchange/build/doc/src/pages/events/iblock/ElementPage.vue"],"sourcesContent":["<script setup>\nimport {reactive} from 'vue';\nimport CodeBlock from \"@/components/block-code/CodeBlock.vue\";\nimport {BeforeAdd, CancelBeforeAdd, AfterAdd, BeforeUpdate, CancelBeforeUpdate, AfterUpdate} from \"@/data/codes/php/events/iblock/element/import\";\nimport TableContents from \"@/components/table-contents/TableContents.vue\";\n\nconst data = reactive({\n  tableContents: [\n    {\n      title: 'onBeforeIBlockElementAdd',\n      hash: 'before-add',\n    },\n    {\n      title: 'onAfterIBlockElementAdd',\n      hash: 'after-add',\n    },\n    {\n      title: 'onBeforeIBlockElementUpdate',\n      hash: 'before-update',\n    },\n    {\n      title: 'onAfterIBlockElementUpdate',\n      hash: 'after-update',\n    },\n  ]\n});\n</script>\n\n<template>\n  <section>\n    <h1>События импорта элементов информационного блока</h1>\n    <p>Класс <a href=\"/api/classes/Sholokhov-BitrixExchange-Target-IBlock-Element.html\" target=\"_blank\">Element</a></p>\n\n    <h2 class=\"pt-2\">События</h2>\n    <table-contents :items=\"data.tableContents\" />\n  </section>\n\n    <section class=\"card mt-5 mb-5\">\n      <div class=\"card-body\">\n        <h2 class=\"card-title\" id=\"before-add\">onBeforeIBlockElementAdd</h2>\n        <div class=\"card-text\">\n          <p>Событие вызывается перед созданием элемента</p>\n\n          <h3 class=\"pt-2\">Параметры события</h3>\n          <table class=\"table table-dark table-striped\">\n            <thead>\n            <tr>\n              <td>Название</td>\n              <td>Тип данных</td>\n              <td>Обязательность</td>\n              <td>Примечание</td>\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n              <td>FIELDS</td>\n              <td>array</td>\n              <td>Да</td>\n              <td>Значение передается по ссылке</td>\n            </tr>\n            </tbody>\n          </table>\n\n          <h3 class=\"pt-2\">Пример подписки на событие</h3>\n          <code-block :code=\"BeforeAdd\" />\n\n          <div class=\"alert alert-info mt-2\" role=\"alert\">\n            <p>Присутствует возможность отмены добавления значения.</p>\n            <p>Если отменить добавление, то в лог файле появится соответствующее сообщение, но в результате работы импорта это не отобразится.</p>\n          </div>\n\n          <h3 class=\"pt-2\">Пример отмены добавления</h3>\n          <code-block :code=\"CancelBeforeAdd\" />\n        </div>\n      </div>\n    </section>\n\n    <section class=\"card mt-5 mb-5\">\n      <div class=\"card-body\">\n        <h2 class=\"card-title\" id=\"after-add\">onAfterIBlockElementAdd</h2>\n        <div class=\"card-text\">\n          <p>Событие вызывается после добавления элемента</p>\n\n          <h3 class=\"pt-2\">Параметры события</h3>\n          <table class=\"table table-dark table-striped\">\n            <thead>\n            <tr>\n              <td>Название</td>\n              <td>Тип данных</td>\n              <td>Обязательность</td>\n              <td>Примечание</td>\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n              <td>ID</td>\n              <td>int</td>\n              <td>Да</td>\n              <td>ID созданного элемента</td>\n            </tr>\n            <tr>\n              <td>FIELDS</td>\n              <td>array</td>\n              <td>Да</td>\n              <td>Массив с добавляемыми значениями</td>\n            </tr>\n            <tr>\n              <td>RESULT</td>\n              <td>Sholokhov\\Exchange\\Messages\\Type\\DataResult</td>\n              <td>Да</td>\n              <td>Результат создания</td>\n            </tr>\n            </tbody>\n          </table>\n\n          <h3 class=\"pt-2\">Пример подписки на событие</h3>\n\n          <code-block :code=\"AfterAdd\" />\n        </div>\n      </div>\n    </section>\n\n    <section class=\"card mt-5 mb-5\">\n      <div class=\"card-body\">\n        <h2 class=\"card-title\" id=\"before-update\">onBeforeIBlockElementUpdate</h2>\n        <div class=\"card-text\">\n          <p>Событие перед изменением элемента</p>\n\n          <h3 class=\"pt-2\">Параметры события</h3>\n          <table class=\"table table-dark table-striped\">\n            <thead>\n            <tr>\n              <td>Название</td>\n              <td>Тип данных</td>\n              <td>Обязательность</td>\n              <td>Примечание</td>\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n              <td>ID</td>\n              <td>int</td>\n              <td>Да</td>\n              <td>ID обновляемого элемента</td>\n            </tr>\n            <tr>\n              <td>FIELDS</td>\n              <td>array</td>\n              <td>Да</td>\n              <td>Значение передаются по ссылке</td>\n            </tr>\n            </tbody>\n          </table>\n\n          <h3 class=\"pt-2\">Пример подписки на событие</h3>\n\n          <code-block :code=\"BeforeUpdate\" />\n\n          <div class=\"alert alert-info mt-2\" role=\"alert\">\n            <p>Присутствует возможность отмены изменения элемента.</p>\n            <p>Если отменить изменение, то в лог файле появится соответствующее сообщение, но в результате работы импорта это не отобразится.</p>\n          </div>\n\n          <h3 class=\"pt-2\">Пример отмены добавления</h3>\n          <code-block :code=\"CancelBeforeUpdate\" />\n        </div>\n      </div>\n    </section>\n\n    <section class=\"card mt-5 mb-5\">\n      <div class=\"card-body\">\n        <h2 class=\"card-title\" id=\"after-update\">onAfterIBlockElementUpdate</h2>\n        <div class=\"card-text\">\n          <p>Событие вызывается после обновления элемента сущности и передаются следующие параметры</p>\n\n          <h3 class=\"pt-2\">Параметры события</h3>\n          <table class=\"table table-dark table-striped\">\n            <thead>\n            <tr>\n              <td>Название</td>\n              <td>Тип данных</td>\n              <td>Обязательность</td>\n              <td>Примечание</td>\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n              <td>ID</td>\n              <td>int</td>\n              <td>Да</td>\n              <td>ID обновляемого элемента</td>\n            </tr>\n            <tr>\n              <td>FIELDS</td>\n              <td>array</td>\n              <td>Да</td>\n              <td>Массив с обновленными значениями</td>\n            </tr>\n            <tr>\n              <td>RESULT</td>\n              <td>Sholokhov\\Exchange\\Messages\\Type\\DataResult</td>\n              <td>Да</td>\n              <td>Результат обновления</td>\n            </tr>\n            </tbody>\n          </table>\n\n          <h3 class=\"pt-2\">Пример подписки на событие</h3>\n\n          <code-block :code=\"AfterUpdate\" />\n        </div>\n      </div>\n    </section>\n</template>"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,SAAQA,QAAQ,QAAO,KAAK;AAC5B,OAAOC,SAAS,MAAM,uCAAuC;AAC7D,SAAQC,SAAS,EAAEC,eAAe,EAAEC,QAAQ,EAAEC,YAAY,EAAEC,kBAAkB,EAAEC,WAAW,QAAO,+CAA+C;AACjJ,OAAOC,aAAa,MAAM,+CAA+C;;;;IAEzE,MAAMC,IAAI,GAAGT,QAAQ,CAAC;MACpBU,aAAa,EAAE,CACb;QACEC,KAAK,EAAE,0BAA0B;QACjCC,IAAI,EAAE;MACR,CAAC,EACD;QACED,KAAK,EAAE,yBAAyB;QAChCC,IAAI,EAAE;MACR,CAAC,EACD;QACED,KAAK,EAAE,6BAA6B;QACpCC,IAAI,EAAE;MACR,CAAC,EACD;QACED,KAAK,EAAE,4BAA4B;QACnCC,IAAI,EAAE;MACR,CAAC;IAEL,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}