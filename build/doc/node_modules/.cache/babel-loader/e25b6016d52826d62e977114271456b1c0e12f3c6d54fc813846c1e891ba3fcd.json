{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"table-contents\"\n};\nimport { watch, onMounted } from 'vue';\nimport { useRoute } from \"vue-router\";\nimport NodeTree from \"@/components/table-contents/NodeTree.vue\";\nexport default {\n  __name: 'TableContents',\n  props: {\n    items: {\n      type: Array,\n      default: () => []\n    }\n  },\n  setup(__props) {\n    const route = useRoute();\n    onMounted(() => {\n      if (route.params?.hash) {\n        scroll(route.params.hash);\n      }\n    });\n    watch(() => route.path, () => scroll(route.params.hash));\n    const scroll = hash => {\n      setTimeout(() => document.getElementById(hash)?.scrollIntoView({\n        behavior: 'smooth'\n      }), 400);\n    };\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"ul\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(__props.items, row => {\n        return _openBlock(), _createBlock(NodeTree, {\n          key: row.title,\n          onClick: scroll\n        });\n      }), 128))]);\n    };\n  }\n};","map":{"version":3,"names":["watch","onMounted","useRoute","NodeTree","route","params","hash","scroll","path","setTimeout","document","getElementById","scrollIntoView","behavior"],"sources":["/home/sholokhov/docker/exchange/local/php_interface/sholokhov.bitrix-exchange/build/doc/src/components/table-contents/TableContents.vue"],"sourcesContent":["<script setup>\nimport {defineProps, watch, onMounted} from 'vue';\nimport {useRoute} from \"vue-router\";\nimport NodeTree from \"@/components/table-contents/NodeTree.vue\";\n\nconst route = useRoute();\n\ndefineProps({\n  items: {type: Array, default: () => []},\n});\n\nonMounted(() => {\n  if (route.params?.hash) {\n    scroll(route.params.hash);\n  }\n})\n\nwatch(\n    () => route.path,\n    () => scroll(route.params.hash)\n)\nconst scroll = (hash) => {\n  setTimeout(\n      () => document.getElementById(hash)?.scrollIntoView({behavior: 'smooth'}),\n      400\n  )\n}\n</script>\n\n<template>\n  <ul class=\"table-contents\">\n    <node-tree v-for=\"row in items\" :key=\"row.title\" @click=\"scroll\"/>\n  </ul>\n</template>\n\n<style scoped>\n.table-contents li {\n  color: blue;\n  cursor: pointer;\n}\n\n.table-contents li:hover {\n  text-decoration: underline;\n  color: #0056b3;\n}\n</style>"],"mappings":";;;;AACA,SAAqBA,KAAK,EAAEC,SAAS,QAAO,KAAK;AACjD,SAAQC,QAAQ,QAAO,YAAY;AACnC,OAAOC,QAAQ,MAAM,0CAA0C;;;;;;;;;;IAE/D,MAAMC,KAAK,GAAGF,QAAQ,CAAC,CAAC;IAMxBD,SAAS,CAAC,MAAM;MACd,IAAIG,KAAK,CAACC,MAAM,EAAEC,IAAI,EAAE;QACtBC,MAAM,CAACH,KAAK,CAACC,MAAM,CAACC,IAAI,CAAC;MAC3B;IACF,CAAC;IAEDN,KAAK,CACD,MAAMI,KAAK,CAACI,IAAI,EAChB,MAAMD,MAAM,CAACH,KAAK,CAACC,MAAM,CAACC,IAAI,CAClC;IACA,MAAMC,MAAM,GAAID,IAAI,IAAK;MACvBG,UAAU,CACN,MAAMC,QAAQ,CAACC,cAAc,CAACL,IAAI,CAAC,EAAEM,cAAc,CAAC;QAACC,QAAQ,EAAE;MAAQ,CAAC,CAAC,EACzE,GACJ;IACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}