{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"node-tree\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = [\"href\"];\nconst _hoisted_4 = {\n  key: 3,\n  class: \"label\"\n};\nconst _hoisted_5 = {\n  key: 4\n};\nexport default {\n  __name: 'NodeTree',\n  props: {\n    item: {\n      type: Array,\n      default: () => []\n    }\n  },\n  setup(__props) {\n    return (_ctx, _cache) => {\n      const _component_router_link = _resolveComponent(\"router-link\");\n      const _component_node_tree = _resolveComponent(\"node-tree\", true);\n      return _openBlock(), _createElementBlock(\"li\", _hoisted_1, [!__props.item.link && !__props.item.code ? (_openBlock(), _createElementBlock(\"p\", _hoisted_2, _toDisplayString(__props.item.title), 1)) : __props.item.link ? (_openBlock(), _createElementBlock(\"a\", {\n        key: 1,\n        href: __props.item.link,\n        target: \"_blank\"\n      }, _toDisplayString(__props.item.title), 9, _hoisted_3)) : __props.item.code ? (_openBlock(), _createBlock(_component_router_link, {\n        key: 2,\n        to: {\n          name: __props.item.code\n        },\n        \"exact-active-class\": \"router-link-active\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(__props.item.title), 1)]),\n        _: 1\n      }, 8, [\"to\"])) : (_openBlock(), _createElementBlock(\"span\", _hoisted_4, _toDisplayString(__props.item.title), 1)), __props.item.children && __props.item.children.length ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(__props.item.children, children => {\n        return _openBlock(), _createBlock(_component_node_tree, {\n          key: children.title,\n          item: children\n        }, null, 8, [\"item\"]);\n      }), 128))])) : _createCommentVNode(\"\", true)]);\n    };\n  }\n};","map":{"version":3,"names":[],"sources":["/home/sholokhov/docker/exchange/local/php_interface/sholokhov.bitrix-exchange/build/doc/src/components/menu/left/NodeTree.vue"],"sourcesContent":["<script setup>\nimport {defineProps} from 'vue';\n\ndefineProps({\n  item: {type: Array, default: () => []}\n});\n</script>\n\n<template>\n  <li class=\"node-tree\">\n    <p v-if=\"!item.link && !item.code\">{{item.title}}</p>\n    <a v-else-if=\"item.link\" :href=\"item.link\" target=\"_blank\">{{item.title}}</a>\n    <router-link\n        v-else-if=\"item.code\"\n        :to=\"{name: item.code}\"\n        exact-active-class=\"router-link-active\"\n    >\n      {{ item.title }}\n    </router-link>\n    <span v-else class=\"label\">{{ item.title }}</span>\n\n    <ul v-if=\"item.children && item.children.length\">\n      <node-tree v-for=\"children in item.children\" :key=\"children.title\" :item=\"children\" />\n    </ul>\n  </li>\n</template>\n\n<style scoped>\n.router-link-active {\n  font-weight: bold;\n}\n</style>"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}