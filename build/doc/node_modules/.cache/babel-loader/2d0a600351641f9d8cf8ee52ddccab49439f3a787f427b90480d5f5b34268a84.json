{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, createVNode as _createVNode, unref as _unref, createStaticVNode as _createStaticVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nimport Started from \"@/data/codes/php/started\";\nimport CodeBlock from \"@/components/block-code/CodeBlock.vue\";\nexport default {\n  __name: 'StartedPage',\n  setup(__props) {\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(_Fragment, null, [_cache[3] || (_cache[3] = _createElementVNode(\"h1\", null, \"Использование обмена\", -1)), _cache[4] || (_cache[4] = _createElementVNode(\"ul\", null, [_createElementVNode(\"li\", null, \"Установка\"), _createElementVNode(\"li\", null, \"Минимальные требования\"), _createElementVNode(\"li\", null, \"Описание\"), _createElementVNode(\"li\", null, \"Карта обмена\")], -1)), _cache[5] || (_cache[5] = _createElementVNode(\"article\", {\n        class: \"mb-5\"\n      }, [_createElementVNode(\"p\", null, \" Модуль обмена позволяет производить импорт\\\\экспорт из любых в любые сущности. Позволяет легко настроить обмен указав источник данных и сопоставить значения (откуда - куда). Библиотека позиционирует себя как расширяемое решение и предоставляет широкий набор вмешательства в процесс обмена без изменения штатной логики. Если стандартные предложенные решения не подходят, то разработчику предоставляется реализовать свою логику. \")], -1)), _createElementVNode(\"article\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"h2\", null, \"Установка\", -1)), _cache[1] || (_cache[1] = _createElementVNode(\"p\", null, [_createTextVNode(\"Обмен доступен на Packagist \"), _createElementVNode(\"a\", {\n        href: \"https://packagist.org/packages/sholokhov/bitrix-exchange\",\n        target: \"_blank\"\n      }, \"sholokhov/bitrix-exchange\"), _createTextVNode(\" и доступен в пакетном менеджере \"), _createElementVNode(\"a\", {\n        href: \"http://getcomposer.org/\",\n        target: \"_blank\"\n      }, \"Composer\")], -1)), _createVNode(CodeBlock, {\n        code: \"composer require sholokhov/bitrix-exchange\",\n        lang: \"bash\"\n      })]), _cache[6] || (_cache[6] = _createStaticVNode(\"<article><h2>Минимальные требования</h2><ul><li>Версия php 8.2</li><li>Редакция bitrix: Старт</li></ul></article><article><h2>Описание</h2><p>Модуль обмена позволяет производить импорт\\\\экспорт из любых в любые сущности.</p><p> За основу механизма обмена был взят модуль <a href=\\\"https://github.com/sholokhov-daniil/exchange\\\" target=\\\"_blank\\\">sholokhov/exchange</a></p></article><article><h2>Карта импорта</h2><p> Более подробная документация описана в модуле <a href=\\\"https://github.com/sholokhov-daniil/exchange\\\" target=\\\"_blank\\\">sholokhov/exchange</a></p></article>\", 3)), _createElementVNode(\"article\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"h2\", null, \"Запуск обмена\", -1)), _createVNode(CodeBlock, {\n        code: _unref(Started)\n      }, null, 8, [\"code\"])])], 64);\n    };\n  }\n};","map":{"version":3,"names":["Started","CodeBlock"],"sources":["/home/sholokhov/docker/exchange/local/php_interface/sholokhov.bitrix-exchange/build/doc/src/pages/StartedPage.vue"],"sourcesContent":["<script setup>\nimport Started from \"@/data/codes/php/started\";\nimport CodeBlock from \"@/components/block-code/CodeBlock.vue\";\n</script>\n\n<template>\n  <h1>Использование обмена</h1>\n  <ul>\n    <li>Установка</li>\n    <li>Минимальные требования</li>\n    <li>Описание</li>\n    <li>Карта обмена</li>\n  </ul>\n\n  <article class=\"mb-5\">\n    <p>\n      Модуль обмена позволяет производить импорт\\экспорт из любых в любые сущности.\n      Позволяет легко настроить обмен указав источник данных и сопоставить значения (откуда - куда).\n      Библиотека позиционирует себя как расширяемое решение и предоставляет широкий набор вмешательства в процесс обмена без изменения штатной логики.\n      Если стандартные предложенные решения не подходят, то разработчику предоставляется реализовать свою логику.\n    </p>\n  </article>\n\n\n  <article>\n    <h2>Установка</h2>\n    <p>Обмен доступен на Packagist <a href=\"https://packagist.org/packages/sholokhov/bitrix-exchange\" target=\"_blank\">sholokhov/bitrix-exchange</a> и доступен в пакетном менеджере  <a href=\"http://getcomposer.org/\" target=\"_blank\">Composer</a></p>\n\n    <CodeBlock\n      code=\"composer require sholokhov/bitrix-exchange\"\n      lang=\"bash\"\n    />\n  </article>\n\n  <article>\n    <h2>Минимальные требования</h2>\n    <ul>\n      <li>Версия php 8.2</li>\n      <li>Редакция bitrix: Старт</li>\n    </ul>\n  </article>\n\n  <article>\n    <h2>Описание</h2>\n    <p>Модуль обмена позволяет производить импорт\\экспорт из любых в любые сущности.</p>\n    <p>\n      За основу механизма обмена был взят модуль <a href=\"https://github.com/sholokhov-daniil/exchange\" target=\"_blank\">sholokhov/exchange</a>\n    </p>\n  </article>\n\n  <article>\n    <h2>Карта импорта</h2>\n    <p>\n      Более подробная документация описана в модуле <a href=\"https://github.com/sholokhov-daniil/exchange\" target=\"_blank\">sholokhov/exchange</a>\n    </p>\n  </article>\n\n  <article>\n    <h2>Запуск обмена</h2>\n    <CodeBlock :code=\"Started\"/>\n  </article>\n\n</template>"],"mappings":";AACA,OAAOA,OAAO,MAAM,0BAA0B;AAC9C,OAAOC,SAAS,MAAM,uCAAuC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}