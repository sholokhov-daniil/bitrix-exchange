{"ast":null,"code":"import { unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"row row-cols-auto\"\n};\nconst _hoisted_2 = {\n  class: \"card w-50\"\n};\nconst _hoisted_3 = {\n  class: \"card-body\"\n};\nconst _hoisted_4 = {\n  class: \"card-title\"\n};\nimport Structure from \"@/data/structure\";\nexport default {\n  __name: 'SectionList',\n  props: {\n    id: {\n      type: String,\n      required: true\n    }\n  },\n  setup(__props) {\n    const props = __props;\n    const getItems = iterator => {\n      for (let item of iterator) {\n        if (item.code === props.id) {\n          return item.children || [];\n        } else if (Array.isArray(item.children)) {\n          let items = getItems(item.children);\n          if (items && items.length) {\n            return items;\n          }\n        }\n      }\n      return [];\n    };\n    return (_ctx, _cache) => {\n      const _component_router_link = _resolveComponent(\"router-link\");\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(getItems(_unref(Structure)()), event => {\n        return _openBlock(), _createElementBlock(\"div\", {\n          key: event.title,\n          class: \"col\"\n        }, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"h5\", _hoisted_4, _toDisplayString(event.title), 1), event.code ? (_openBlock(), _createBlock(_component_router_link, {\n          key: 0,\n          to: {\n            name: event.code\n          },\n          class: \"btn btn-primary\"\n        }, {\n          default: _withCtx(() => _cache[0] || (_cache[0] = [_createTextVNode(\"Перейти\")])),\n          _: 2\n        }, 1032, [\"to\"])) : _createCommentVNode(\"\", true)])])]);\n      }), 128))]);\n    };\n  }\n};","map":{"version":3,"names":["Structure","props","__props","getItems","iterator","item","code","id","children","Array","isArray","items","length"],"sources":["/home/sholokhov/docker/exchange/local/php_interface/sholokhov.bitrix-exchange/build/doc/src/components/section-list/SectionList.vue"],"sourcesContent":["<script setup>\nimport {defineProps} from 'vue';\nimport Structure from \"@/data/structure\";\n\nconst props = defineProps({\n  id: {type: String, required: true}\n});\n\nconst getItems = (iterator) => {\n  for (let item of iterator) {\n    if (item.code === props.id) {\n      return item.children || [];\n    } else if (Array.isArray(item.children)) {\n      let items = getItems(item.children);\n\n      if (items && items.length) {\n        return items;\n      }\n    }\n  }\n\n  return [];\n}\n</script>\n\n<template>\n  <div class=\"row row-cols-auto\">\n    <div v-for=\"event in getItems(Structure())\" :key=\"event.title\" class=\"col\">\n      <div class=\"card w-50\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">{{ event.title }}</h5>\n          <router-link v-if=\"event.code\" :to=\"{name: event.code}\" class=\"btn btn-primary\">Перейти</router-link>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>"],"mappings":";;;;;;;;;;;;;AAEA,OAAOA,SAAS,MAAM,kBAAkB;;;;;;;;;;IAExC,MAAMC,KAAK,GAAGC,OAEZ;IAEF,MAAMC,QAAQ,GAAIC,QAAQ,IAAK;MAC7B,KAAK,IAAIC,IAAI,IAAID,QAAQ,EAAE;QACzB,IAAIC,IAAI,CAACC,IAAI,KAAKL,KAAK,CAACM,EAAE,EAAE;UAC1B,OAAOF,IAAI,CAACG,QAAQ,IAAI,EAAE;QAC5B,CAAC,MAAM,IAAIC,KAAK,CAACC,OAAO,CAACL,IAAI,CAACG,QAAQ,CAAC,EAAE;UACvC,IAAIG,KAAK,GAAGR,QAAQ,CAACE,IAAI,CAACG,QAAQ,CAAC;UAEnC,IAAIG,KAAK,IAAIA,KAAK,CAACC,MAAM,EAAE;YACzB,OAAOD,KAAK;UACd;QACF;MACF;MAEA,OAAO,EAAE;IACX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}