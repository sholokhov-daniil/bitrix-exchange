{"ast":null,"code":"import { createElementVNode as _createElementVNode, createVNode as _createVNode, createTextVNode as _createTextVNode, unref as _unref, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"mb-5\"\n};\nconst _hoisted_2 = {\n  class: \"mb-5\"\n};\nimport { reactive } from \"vue\";\nimport Started from \"@/data/codes/php/started\";\nimport CodeBlock from \"@/components/block-code/CodeBlock.vue\";\nimport TableContents from \"@/components/table-contents/TableContents.vue\";\nexport default {\n  __name: 'StartedPage',\n  setup(__props) {\n    const data = reactive({\n      tableContents: [{\n        title: 'Установка',\n        hash: 'installed'\n      }, {\n        title: 'Запуск обмена',\n        hash: 'example'\n      }]\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(_Fragment, null, [_cache[3] || (_cache[3] = _createElementVNode(\"h1\", null, \"Использование обмена\", -1)), _createVNode(TableContents, {\n        items: data.tableContents\n      }, null, 8, [\"items\"]), _cache[4] || (_cache[4] = _createElementVNode(\"article\", {\n        class: \"mb-5\"\n      }, [_createElementVNode(\"p\", null, \" Модуль обмена позволяет производить импорт\\\\экспорт из любых в любые сущности. Позволяет легко настроить обмен указав источник данных и сопоставить значения (откуда - куда). Библиотека позиционирует себя как расширяемое решение и предоставляет широкий набор вмешательства в процесс обмена без изменения штатной логики. Если стандартные предложенные решения не подходят, то разработчику предоставляется реализовать свою логику. \"), _createElementVNode(\"p\", null, [_createElementVNode(\"strong\", null, \"Минимальные требования:\")]), _createElementVNode(\"ul\", null, [_createElementVNode(\"li\", null, \"Минимальная версия PHP 8.2\"), _createElementVNode(\"li\", null, \"Минимальная версия редакция bitrix \\\"Старт\\\"\")])], -1)), _createElementVNode(\"article\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"h2\", {\n        id: \"installed\"\n      }, \"Установка\", -1)), _cache[1] || (_cache[1] = _createElementVNode(\"p\", null, [_createTextVNode(\"Обмен доступен на Packagist \"), _createElementVNode(\"a\", {\n        href: \"https://packagist.org/packages/sholokhov/bitrix-exchange\",\n        target: \"_blank\"\n      }, \"sholokhov/bitrix-exchange\"), _createTextVNode(\" и доступен в пакетном менеджере \"), _createElementVNode(\"a\", {\n        href: \"http://getcomposer.org/\",\n        target: \"_blank\"\n      }, \"Composer\")], -1)), _createVNode(CodeBlock, {\n        code: \"composer require sholokhov/bitrix-exchange\",\n        lang: \"bash\"\n      })]), _createElementVNode(\"article\", _hoisted_2, [_cache[2] || (_cache[2] = _createElementVNode(\"h2\", {\n        id: \"example\"\n      }, \"Запуск обмена\", -1)), _createVNode(CodeBlock, {\n        code: _unref(Started)\n      }, null, 8, [\"code\"])])], 64);\n    };\n  }\n};","map":{"version":3,"names":["reactive","Started","CodeBlock","TableContents","data","tableContents","title","hash"],"sources":["/home/sholokhov/docker/exchange/local/php_interface/sholokhov.bitrix-exchange/build/doc/src/pages/StartedPage.vue"],"sourcesContent":["<script setup>\nimport {reactive} from \"vue\";\n\nimport Started from \"@/data/codes/php/started\";\nimport CodeBlock from \"@/components/block-code/CodeBlock.vue\";\nimport TableContents from \"@/components/table-contents/TableContents.vue\";\n\nconst data = reactive({\n  tableContents: [\n    {\n      title: 'Установка',\n      hash: 'installed'\n    },\n    {\n      title: 'Запуск обмена',\n      hash: 'example'\n    }\n  ]\n})\n</script>\n\n<template>\n  <h1>Использование обмена</h1>\n  <table-contents :items=\"data.tableContents\" />\n\n  <article class=\"mb-5\">\n    <p>\n      Модуль обмена позволяет производить импорт\\экспорт из любых в любые сущности.\n      Позволяет легко настроить обмен указав источник данных и сопоставить значения (откуда - куда).\n      Библиотека позиционирует себя как расширяемое решение и предоставляет широкий набор вмешательства в процесс обмена без изменения штатной логики.\n      Если стандартные предложенные решения не подходят, то разработчику предоставляется реализовать свою логику.\n    </p>\n    <p><strong>Минимальные требования:</strong> </p>\n    <ul>\n      <li>Минимальная версия PHP 8.2</li>\n      <li>Минимальная версия редакция bitrix \"Старт\"</li>\n    </ul>\n  </article>\n\n  <article class=\"mb-5\">\n    <h2 id=\"installed\">Установка</h2>\n    <p>Обмен доступен на Packagist <a href=\"https://packagist.org/packages/sholokhov/bitrix-exchange\" target=\"_blank\">sholokhov/bitrix-exchange</a> и доступен в пакетном менеджере  <a href=\"http://getcomposer.org/\" target=\"_blank\">Composer</a></p>\n\n    <CodeBlock\n      code=\"composer require sholokhov/bitrix-exchange\"\n      lang=\"bash\"\n    />\n  </article>\n\n  <article class=\"mb-5\">\n    <h2 id=\"example\">Запуск обмена</h2>\n    <CodeBlock :code=\"Started\"/>\n  </article>\n\n</template>"],"mappings":";;;;;;;AACA,SAAQA,QAAQ,QAAO,KAAK;AAE5B,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,OAAOC,SAAS,MAAM,uCAAuC;AAC7D,OAAOC,aAAa,MAAM,+CAA+C;;;;IAEzE,MAAMC,IAAI,GAAGJ,QAAQ,CAAC;MACpBK,aAAa,EAAE,CACb;QACEC,KAAK,EAAE,WAAW;QAClBC,IAAI,EAAE;MACR,CAAC,EACD;QACED,KAAK,EAAE,eAAe;QACtBC,IAAI,EAAE;MACR;IAEJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}