{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, unref as _unref, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nimport { useRoute } from \"vue-router\";\nimport { RouterLink } from \"vue-router\";\nexport default {\n  __name: 'NodeTree',\n  props: {\n    item: {\n      type: Array,\n      default: () => []\n    }\n  },\n  emits: ['click'],\n  setup(__props, {\n    emit: __emit\n  }) {\n    const route = useRoute();\n    const emit = __emit;\n    const to = item => {\n      return {\n        name: route.name,\n        params: {\n          hash: item.hash\n        }\n      };\n    };\n    const click = hash => {\n      if (route.params.hash === hash) {\n        emit('click', hash);\n      }\n    };\n    return (_ctx, _cache) => {\n      const _component_node_tree = _resolveComponent(\"node-tree\", true);\n      return _openBlock(), _createElementBlock(\"li\", null, [_createVNode(_unref(RouterLink), {\n        to: to(_ctx.row),\n        onClick: _cache[0] || (_cache[0] = $event => click(_ctx.row.hash))\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.row.title), 1)]),\n        _: 1\n      }, 8, [\"to\"]), __props.item.children && __props.item.children.length ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(__props.item.children, children => {\n        return _openBlock(), _createBlock(_component_node_tree, {\n          key: children.title,\n          item: children,\n          onClick: _cache[1] || (_cache[1] = $event => emit('click', $event))\n        }, null, 8, [\"item\"]);\n      }), 128))])) : _createCommentVNode(\"\", true)]);\n    };\n  }\n};","map":{"version":3,"names":["useRoute","RouterLink","route","emit","__emit","to","item","name","params","hash","click"],"sources":["/home/sholokhov/docker/exchange/local/php_interface/sholokhov.bitrix-exchange/build/doc/src/components/table-contents/NodeTree.vue"],"sourcesContent":["<script setup>\nimport {defineProps, defineEmits} from 'vue';\nimport {useRoute} from \"vue-router\";\nimport {RouterLink} from \"vue-router\";\n\nconst route = useRoute();\nconst emit = defineEmits(['click']);\n\ndefineProps({\n  item: {type: Array, default: () => []}\n})\n\nconst to = (item) => {\n  return {\n    name: route.name,\n    params: {\n      hash: item.hash\n    }\n  };\n}\n\nconst click = (hash) => {\n  if (route.params.hash === hash) {\n    emit('click', hash);\n  }\n}\n</script>\n\n<template>\n  <li>\n    <router-link :to=\"to(row)\" @click=\"click(row.hash)\">{{row.title}}</router-link>\n\n    <ul v-if=\"item.children && item.children.length\">\n      <node-tree v-for=\"children in item.children\" :key=\"children.title\" :item=\"children\" @click=\"emit('click', $event)\"/>\n    </ul>\n  </li>\n</template>"],"mappings":";;;;AAEA,SAAQA,QAAQ,QAAO,YAAY;AACnC,SAAQC,UAAU,QAAO,YAAY;;;;;;;;;;;;;IAErC,MAAMC,KAAK,GAAGF,QAAQ,CAAC,CAAC;IACxB,MAAMG,IAAI,GAAGC,MAAsB;IAMnC,MAAMC,EAAE,GAAIC,IAAI,IAAK;MACnB,OAAO;QACLC,IAAI,EAAEL,KAAK,CAACK,IAAI;QAChBC,MAAM,EAAE;UACNC,IAAI,EAAEH,IAAI,CAACG;QACb;MACF,CAAC;IACH;IAEA,MAAMC,KAAK,GAAID,IAAI,IAAK;MACtB,IAAIP,KAAK,CAACM,MAAM,CAACC,IAAI,KAAKA,IAAI,EAAE;QAC9BN,IAAI,CAAC,OAAO,EAAEM,IAAI,CAAC;MACrB;IACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}